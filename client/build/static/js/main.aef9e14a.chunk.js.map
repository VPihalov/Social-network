{"version":3,"sources":["components/layout/spinner.gif","actions/alert.js","actions/types.js","utils/setAuthToken.js","actions/auth.js","components/layout/Navbar.js","components/layout/Landing.js","components/auth/Register.js","components/auth/Login.js","components/layout/Alert.js","components/layout/Spinner.js","actions/profile.js","components/dashboard/DashboardActions.js","components/dashboard/Experience.js","components/dashboard/Education.js","components/dashboard/Dashboard.js","components/profile-forms/CreateProfile.js","components/profile-forms/EditProfile.js","components/profile-forms/AddExperience.js","components/profile-forms/AddEducation.js","components/routing/PrivateRoute.js","components/profiles/ProfileItem.js","components/profiles/Profiles.js","components/profile/ProfileTop.js","components/profile/ProfileAbout.js","components/profile/ProfileExperience.js","components/profile/ProfileEducation.js","components/profile/ProfileGithubRepos.js","components/profile/Profile.js","components/posts/PostItem.js","actions/post.js","components/posts/PostForm.js","components/posts/Posts.js","components/post/CommentForm.js","components/post/CommentItem.js","components/post/Post.js","reducers/alert.js","reducers/auth.js","reducers/profile.js","reducers/post.js","reducers/index.js","store.js","App.js","index.js"],"names":["module","exports","setAlert","msg","alertType","timeout","dispatch","id","uuid","v4","type","payload","setTimeout","setAuthToken","token","axios","defaults","headers","common","loadUser","a","localStorage","get","res","data","connect","state","auth","logout","isAuthenticated","loading","authLinks","to","className","onClick","href","guestLinks","Landing","prototype","PropTypes","bool","register","name","email","password","body","JSON","stringify","config","post","errors","response","forEach","error","useState","password2","formData","setFormData","onChange","e","target","value","onSubmit","preventDefault","console","log","placeholder","login","required","minLength","alerts","alert","length","map","key","src","spinner","style","width","margin","display","alt","getCurrentProfile","statusText","status","createProfile","history","edit","push","DashboardActions","deleteExperience","delete","experience","experiences","exp","_id","company","title","format","from","deleteEducation","education","educations","edu","school","degree","profile","deleteAccount","window","confirm","user","useEffect","Spinner","withRouter","website","location","skills","githubusername","bio","twitter","facebook","linkedin","youtube","instagram","displaySocialInputs","toggleSocialInputs","join","social","addExperience","put","current","description","toDateDisabled","toggleDisabled","checked","disabled","cols","rows","addEducation","fieldOfStudy","Component","component","rest","render","props","ProfileItem","avatar","slice","skill","index","getProfiles","profiles","ProfileTop","rel","ProfileAbout","split","ProfileExperience","ProfileEducation","fieldofstudy","repos","getGithubRepos","userName","repo","html_url","stargezers_count","watchers_count","forks_count","getProfileById","userId","match","gottenProfile","params","PostItem","comments","text","likes","date","addLike","removeLike","deletePost","showAction","defaultProps","createPost","setText","getPosts","posts","PostForm","CommentForm","createComment","postId","setComment","protoTypes","func","isRequired","comment","deleteComment","commentId","getPost","initialState","getItem","combineReducers","action","filter","setItem","removeItem","middleware","thunk","store","createStore","rootReducer","composeWithDevTools","applyMiddleware","App","exact","path","Register","Login","Profiles","Profile","Dashboard","CreateProfile","EditProfile","AddExperience","AddEducation","Posts","Post","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.aef9e14a.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/spinner.0c194e03.gif\";","import uuid from 'uuid';\r\nimport {SET_ALERT, REMOVE_ALERT} from './types';\r\n\r\nexport const setAlert = (msg, alertType, timeout = 3000) => dispatch => {\r\n    const id = uuid.v4();\r\n    dispatch({\r\n      type: SET_ALERT,\r\n      payload: {msg, alertType, id}\r\n\t\t});\r\n\t\tsetTimeout(() => {\r\n\t\t\tdispatch({\r\n\t\t\t\ttype: REMOVE_ALERT,\r\n\t\t\t\tpayload: {id}\r\n\t\t\t})\t\t\r\n\t\t}, timeout)\r\n};","export const SET_ALERT = 'SET_ALERT';\r\nexport const REMOVE_ALERT = 'REMOVE_ALERT';\r\nexport const REGISTER_SUCCESS = 'REGISTER_SUCCESS';\r\nexport const REGISTER_FAIL = 'REGISTER_FAIL';\r\nexport const USER_LOADED = 'USER_LOADED';\r\nexport const AUTH_ERROR = 'AUTH_ERROR';\r\nexport const LOGIN_SUCCESS = 'LOGIN_SUCCESS';\r\nexport const LOGIN_FAIL = 'LOGIN_FAIL';\r\nexport const LOGOUT = 'LOGOUT';\r\nexport const UPDATE_PROFILE = 'UPDATE_PROFILE';\r\nexport const GET_PROFILE = 'GET_PROFILE';\r\nexport const GET_PROFILES = 'GET_PROFILES';\r\nexport const GET_GITHUB_REPOS = 'GET_GITHUB_REPOS';\r\nexport const PROFILE_ERROR = 'PROFILE_ERROR';\r\nexport const CLEAR_PROFILE = 'CLEAR_PROFILE';\r\nexport const ACCOUNT_DELETED = 'ACCOUNT_DELETED';\r\nexport const GET_POSTS = 'GET_POSTS';\r\nexport const GET_POST = 'GET_POST';\r\nexport const POST_ERROR = 'POST_ERROR';\r\nexport const UPDATE_LIKES = 'UPDATE_LIKES';\r\nexport const DELETE_POST = 'DELETE_POST';\r\nexport const CREATE_POST = 'CREATE_POST';\r\nexport const CREATE_COMMENT = 'CREATE_COMMENT';\r\nexport const DELETE_COMMENT = 'DELETE_COMMENT';","import axios from 'axios';\r\n\r\nconst setAuthToken = token => {\r\n\tif (token) {\r\n\t\taxios.defaults.headers.common['x-auth-token'] = token\r\n\t} else {\r\n\t\tdelete axios.defaults.headers.common['x-auth-token']\r\n\t}\r\n};\r\n\r\nexport default setAuthToken","import axios from 'axios';\r\nimport {\r\n\tREGISTER_SUCCESS,\r\n\tREGISTER_FAIL,\r\n\tUSER_LOADED, \r\n\tAUTH_ERROR,\r\n\tLOGIN_SUCCESS,\r\n  LOGIN_FAIL,\r\n\tLOGOUT,\r\n\tCLEAR_PROFILE\r\n} \r\nfrom './types';\r\nimport {setAlert} from '../actions/alert';\r\nimport setAuthToken from '../utils/setAuthToken';\r\n\r\n//Register user\r\nexport const register = ({name, email, password}) => async dispatch => {\r\n\tconst body = JSON.stringify({name, email, password});\r\n\tconst config = {\r\n\t\t headers: {\r\n\t\t\t\t'Content-Type': 'application/json'\r\n\t\t }\r\n\t};\r\n\ttry {\r\n\t\t const res = await axios.post('/api/users', body, config);\r\n\t\t dispatch({\r\n\t\t\t\ttype: REGISTER_SUCCESS,\r\n\t\t\t\tpayload: res.data\r\n\t\t });\r\n\t\t dispatch(loadUser())\r\n\t} catch (error) {\r\n\t\t const errors = error.response.data.errors;\r\n\t\t if (errors) {\r\n\t\t\t\terrors.forEach(error => dispatch(setAlert(error.msg, 'danger')));\r\n\t\t }\r\n\t\t dispatch({\r\n\t\t\t\ttype: REGISTER_FAIL\r\n\t\t })\r\n\t}\r\n}\r\n\r\n//Load user\r\nexport const loadUser = () => async dispatch => {\r\n\tif (localStorage.token) {\r\n\t\tsetAuthToken(localStorage.token)\r\n\t}\r\n\ttry {\r\n\t\tconst res = await axios.get('/api/auth');\r\n\t\tdispatch({\r\n\t\t\ttype: USER_LOADED,\r\n\t\t\tpayload: res.data\r\n\t\t});\r\n\t} catch (error) {\r\n\t\tdispatch({\r\n\t\t\ttype: AUTH_ERROR\r\n\t\t})\r\n\t}\r\n\r\n}\r\n\r\n//Login user\r\nexport const login = (email, password) => async dispatch => {\r\n\tconst body = JSON.stringify({email, password});\r\n\tconst config = {\r\n\t\t headers: {\r\n\t\t\t\t'Content-Type': 'application/json'\r\n\t\t }\r\n\t};\r\n\ttry {\r\n\t\t const res = await axios.post('/api/auth', body, config);\r\n\t\t dispatch({\r\n\t\t\t\ttype: LOGIN_SUCCESS,\r\n\t\t\t\tpayload: res.data\r\n\t\t })\r\n\t\t dispatch(loadUser())\r\n\t} catch (error) {\r\n\t\t const errors = error.response.data.errors;\r\n\t\t if (errors) {\r\n\t\t\t\terrors.forEach(error => dispatch(setAlert(error.msg, 'danger')));\r\n\t\t }\r\n\t\t dispatch({\r\n\t\t\t\ttype: LOGIN_FAIL\r\n\t\t })\r\n\t}\r\n}\r\n\r\n//Logout user / Clear profile\r\nexport const logout = () => dispatch => {\r\n   dispatch({type: CLEAR_PROFILE});\r\n   dispatch({type: LOGOUT})\r\n}","import React, {Fragment} from 'react';\r\nimport {Link} from 'react-router-dom';\r\nimport {connect} from 'react-redux';\r\nimport {logout} from '../../actions/auth';\r\nimport PropTypes from 'prop-types'\r\n\r\nconst Navbar = ({logout, auth: {isAuthenticated, loading}}) => {\r\n\tconst authLinks = (\r\n\t\t<ul>\r\n\t\t\t<li>\r\n\t\t\t\t<Link to=\"/profiles\">Developers</Link>\r\n\t\t\t</li>\r\n\t\t\t<li>\r\n\t\t\t\t<Link to=\"/posts\">Posts</Link>\r\n\t\t\t</li>\r\n\t\t\t<li>\r\n\t\t\t\t<Link to=\"/dashboard\">\r\n\t\t\t\t<i className=\"fas fa-user\"></i>{' '}\r\n\t\t\t\t<span className=\"hide-sm\">\r\n\t\t\t\t\tDashboard\r\n\t\t\t\t</span>\r\n\t\t\t\t</Link>\r\n\t\t\t</li>\r\n\t\t\t<li>\r\n\t\t\t\t<a onClick={logout} href=\"#!\">\r\n\t\t\t\t<i className=\"fas fa-sign-out-alt\"></i>{' '}\r\n\t\t\t\t\t<span className=\"hide-sm\">\r\n\t\t\t\t\t\tLogout\r\n\t\t\t\t\t</span>\r\n\t\t\t\t</a>\r\n\t\t\t</li>\r\n\t\t</ul>\r\n\t); \r\n\tconst guestLinks = (\r\n\t\t<ul>\r\n\t\t\t<li>\r\n\t\t\t\t<Link to=\"/profiles\">Developers</Link>\r\n\t\t\t</li>\r\n\t\t\t<li>\r\n\t\t\t\t<Link to=\"/register\">Register</Link>\r\n\t\t\t</li>\r\n\t\t\t<li>\r\n\t\t\t\t<Link to=\"/login\">Login</Link>\r\n\t\t\t</li>\r\n\t\t</ul>\r\n\t)\r\n\r\n\r\n\treturn (\r\n\t\t<nav className=\"navbar bg-dark\">\r\n\t\t\t<h1>\r\n\t\t\t\t<Link to=\"/\">\r\n\t\t\t\t\t<i className=\"fas fa-code\"></i> Bind Developers\r\n\t\t\t\t</Link>\r\n\t\t\t</h1>\r\n\t\t\t{!loading && (<Fragment>{isAuthenticated ? authLinks : guestLinks}</Fragment>)}\r\n\t  </nav>\r\n\t)\r\n};\r\n\r\nNavbar.propTypes = {\r\n\tauth: PropTypes.object.isRequired,\r\n\tlogout: PropTypes.func.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n\tauth: state.auth\r\n});\r\n\r\nexport default connect(mapStateToProps, {logout})(Navbar)","import React from 'react';\r\nimport {Link, Redirect} from 'react-router-dom';\r\nimport {connect} from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Landing = ({isAuthenticated}) => {\r\n  if(isAuthenticated) {\r\n    return <Redirect to='/dashboard'/>\r\n  }\r\n\r\n\treturn (\r\n    <section className=\"landing\">\r\n      <div className=\"dark-overlay\">\r\n        <div className=\"landing-inner\">\r\n          <h1 className=\"x-large\">Social Network for developers</h1>\r\n          <p className=\"lead\">\r\n\t\t\t\t\t\tCreate your portfolio and share knowledges with other developers\r\n          </p>\r\n          <div className=\"buttons\">\r\n            <Link to=\"/register\" className=\"btn btn-primary\">\r\n\t\t\t\t\t\t\tSign Up\r\n\t\t\t\t\t\t</Link>\r\n            <Link to=\"/login\" className=\"btn btn-light\">\r\n\t\t\t\t\t\t\tLogin\r\n\t\t\t\t\t\t</Link>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </section>\r\n\t)\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  isAuthenticated: state.auth.isAuthenticated\r\n});\r\n\r\nLanding.prototype = {\r\n  isAuthenticated: PropTypes.bool\r\n};\r\n\r\nexport default connect(mapStateToProps) (Landing)","import React, {Fragment, useState} from 'react';\r\nimport {connect} from 'react-redux';\r\nimport {Link, Redirect} from 'react-router-dom';\r\nimport {setAlert} from '../../actions/alert';\r\nimport {register} from '../../actions/auth';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Register = ({setAlert, register, isAuthenticated}) => {\r\n\t//formData - our state - all widgets on the form\r\n\t//formDate is like state = {formData: {}}\r\n\t//setFormData - function to update state\r\n\t//setFormData - is like this.setState - pass new state\r\n\tconst [formData, setFormData] = useState({\r\n\t\tname: '',\r\n\t\temail: '',\r\n\t\tpassword: '',\r\n\t\tpassword2: ''\r\n\t});\r\n\r\n\tconst {name, email, password, password2} = formData;\r\n\tconst onChange = e => setFormData({...formData, [e.target.name]: e.target.value});\r\n\tconst onSubmit = async e => {\r\n\t\te.preventDefault();\r\n\t\tif(password !== password2) {\r\n\t\t\tsetAlert(\"Passwords do not match\", \"danger\");\r\n\t\t} else {\r\n      register({name, email, password})\r\n\t\t\tconsole.log(\"User created\");\r\n\t\t}\r\n\t}\r\n\r\n\tif(isAuthenticated) {\r\n\t\treturn (\r\n\t\t\t<Redirect to='/dashboard'/>\r\n\t\t)\r\n\t}\r\n\t\r\n  return (\r\n    <Fragment>\r\n      <h1 className='large text-primary'>Sign Up</h1>\r\n      <p className='lead'>\r\n        <i className='fas fa-user' /> Create Your Account\r\n      </p>\r\n      <form className='form' onSubmit={e => onSubmit(e)}>\r\n        <div className='form-group'>\r\n          <input\r\n            type='text'\r\n            placeholder='Name'\r\n            name='name'\r\n            value={name}\r\n            onChange={e => onChange(e)}\r\n          />\r\n        </div>\r\n        <div className='form-group'>\r\n          <input\r\n            type='email'\r\n            placeholder='Email Address'\r\n            name='email'\r\n            value={email}\r\n            onChange={e => onChange(e)}\r\n          />\r\n          <small className='form-text'>\r\n            This site uses Gravatar so if you want a profile image, use a\r\n            Gravatar email\r\n          </small>\r\n        </div>\r\n        <div className='form-group'>\r\n          <input\r\n            type='password'\r\n            placeholder='Password'\r\n            name='password'\r\n            value={password}\r\n            onChange={e => onChange(e)}\r\n          />\r\n        </div>\r\n        <div className='form-group'>\r\n          <input\r\n            type='password'\r\n            placeholder='Confirm Password'\r\n            name='password2'\r\n            value={password2}\r\n            onChange={e => onChange(e)}\r\n          />\r\n        </div>\r\n        <input type='submit' className='btn btn-primary' value='Register' />\r\n      </form>\r\n      <p className='my-1'>\r\n        Already have an account? <Link to='/login'>Sign In</Link>\r\n      </p>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nRegister.propTypes = {\r\n  setAlert: PropTypes.func.isRequired,\r\n\tregister: PropTypes.func.isRequired,\r\n\tisAuthenticated: PropTypes.bool,\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n\tisAuthenticated: state.auth.isAuthenticated\r\n});\r\n\r\nexport default connect(mapStateToProps, {setAlert, register})(Register)","import React, {Fragment, useState} from 'react';\r\nimport {Link, Redirect} from 'react-router-dom';\r\nimport {login} from '../../actions/auth';\r\nimport {connect} from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Login = ({login, isAuthenticated}) => {\r\n\t//formData - our state - all widgets on the form\r\n\t//formDate is like state = {formData: {}}\r\n\t//setFormData - function to update state\r\n\t//setFormData - is like this.setState - pass new state\r\n\tconst [formData, setFormData] = useState({\r\n\t\temail: '',\r\n\t\tpassword: '',\r\n\t});\r\n\r\n\tconst {email, password} = formData;\r\n\tconst onChange = e => setFormData({...formData, [e.target.name]: e.target.value});\r\n\tconst onSubmit = async e => {\r\n\t\te.preventDefault();\r\n\t\tlogin(email, password)\r\n\t}\r\n\r\n\tif(isAuthenticated) {\r\n\t\treturn (\r\n\t\t\t<Redirect to='/dashboard'/>\r\n\t\t)\r\n\t}\r\n\t\r\n\treturn (\r\n\t\t<Fragment>\r\n\t\t\t<h1 className=\"large text-primary\">Sign in</h1>\r\n\t\t\t\t<p className=\"lead\"><i className=\"fas fa-user\"></i> Sign Into Your Account</p>\r\n\t\t\t\t<form className=\"form\" onSubmit={e => onSubmit(e)}>\r\n\t\t\t\t\t<div className=\"form-group\">\r\n\t\t\t\t\t\t<input\r\n\t\t\t\t\t\t\ttype=\"email\" \r\n\t\t\t\t\t\t\tplaceholder=\"Email Address\" \r\n\t\t\t\t\t\t\tname=\"email\"\r\n\t\t\t\t\t\t\tvalue={email} \r\n\t\t\t\t\t\t\tonChange={e => onChange(e)} \r\n\t\t\t\t\t\t\trequired\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className=\"form-group\">\r\n\t\t\t\t\t\t<input\r\n\t\t\t\t\t\t\ttype=\"password\"\r\n\t\t\t\t\t\t\tplaceholder=\"Password\"\r\n\t\t\t\t\t\t\tname=\"password\"\r\n\t\t\t\t\t\t\tvalue={password} \r\n\t\t\t\t\t\t\tonChange={e => onChange(e)} \r\n\t\t\t\t\t\t\trequired\r\n\t\t\t\t\t\t\tminLength=\"6\"\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className=\"form-group\">\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<input type=\"submit\" className=\"btn btn-primary\" value=\"Login\" />\r\n\t\t\t\t</form>\r\n\t\t\t\t<p className=\"my-1\">\r\n\t\t\t\t\tDon't have an account yet? <Link to=\"/register\">Register</Link>\r\n\t\t\t\t</p>\r\n\t\t</Fragment>\r\n\t)\r\n};\r\n\r\nLogin.propTypes = {\r\n\tlogin: PropTypes.func.isRequired,\r\n\tmapStateToProps: PropTypes.bool,\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n\tisAuthenticated: state.auth.isAuthenticated\r\n});\r\n\r\nexport default connect(mapStateToProps, {login})(Login)\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\n\r\nconst Alert = ({alerts}) => alerts !== null && alerts.length > 0 && alerts.map(alert => (\r\n\t<div key={alert.id} className={`alert alert-${alert.alertType}`}> \r\n\t\t\t{alert.msg}\r\n\t</div>\r\n))\r\n\r\nAlert.propTypes = {\r\n\talerts: PropTypes.array.isRequired,\r\n}\r\n\r\n//mapStateToProps принимает два параметра - state (обяз) и объект свойств, переданных компоненту\r\n//вызывается каждый раз, когда состояние хранилища изменится\r\nconst mapStateToProps = state => ({  \r\n\talerts: state.alert\r\n})\r\n\r\nexport default connect(mapStateToProps)(Alert)\r\n","import React, {Fragment} from 'react';\r\nimport spinner from './spinner.gif';\r\n\r\nexport default () => (\r\n   <Fragment>\r\n      <img\r\n         src={spinner}\r\n         style={{ width: '200px', margin: 'auto', display: 'block'}}\r\n         alt='Loading...'\r\n      />\r\n   </Fragment>\r\n)","import axios from 'axios';\r\nimport {setAlert} from './alert';\r\nimport {\r\n\tGET_PROFILE,\r\n\tGET_PROFILES,\r\n\tGET_GITHUB_REPOS,\r\n\tUPDATE_PROFILE,\r\n\tPROFILE_ERROR,\r\n\tACCOUNT_DELETED,\r\n\tCLEAR_PROFILE\r\n} from './types';\r\n\r\n// Get current users profile\r\nexport const getCurrentProfile = () => async dispatch => {\r\n\ttry {\r\n\t  const res = await axios.get('/api/profile/me');\r\n \r\n\t  dispatch({\r\n\t\t type: GET_PROFILE,\r\n\t\t payload: res.data\r\n\t  });\r\n\t} catch (err) {\r\n\t  dispatch({\r\n\t\t type: PROFILE_ERROR,\r\n\t\t payload: { msg: err.response.statusText, status: err.response.status }\r\n\t  });\r\n\t}\r\n };\r\n\r\n // Get all profiles\r\nexport const getProfiles = () => async dispatch => {\r\n\tdispatch({type: CLEAR_PROFILE});\r\n\ttry {\r\n\t  const res = await axios.get('/api/profile');\r\n\t\tconsole.log('res', res)\r\n\t  dispatch({\r\n\t\t type: GET_PROFILES,\r\n\t\t payload: res.data\r\n\t  });\r\n\t} catch (err) {\r\n\t  dispatch({\r\n\t\t type: PROFILE_ERROR,\r\n\t\t payload: { msg: err.response.statusText, status: err.response.status }\r\n\t  });\r\n\t}\r\n};\r\n\r\n// Get profile by id\r\n export const getProfileById = (userId) => async dispatch => {\r\n\ttry {\r\n\t  const res = await axios.get(`/api/profile/user/${userId}`);\r\n \r\n\t  dispatch({\r\n\t\t type: GET_PROFILE,\r\n\t\t payload: res.data\r\n\t  });\r\n\t} catch (err) {\r\n\t  dispatch({\r\n\t\t type: PROFILE_ERROR,\r\n\t\t payload: { msg: err.response.statusText, status: err.response.status }\r\n\t  });\r\n\t}\r\n};\r\n\r\n// Get users github repos\r\n export const getGithubRepos = (userName) => async dispatch => {\r\n\ttry {\r\n\t  const res = await axios.get(`/api/profile/github/${userName}`);\r\n \r\n\t  dispatch({\r\n\t\t type: GET_GITHUB_REPOS,\r\n\t\t payload: res.data\r\n\t  });\r\n\t} catch (err) {\r\n\t  dispatch({\r\n\t\t type: PROFILE_ERROR,\r\n\t\t payload: { msg: err.response.statusText, status: err.response.status }\r\n\t  });\r\n\t}\r\n};\r\n\r\n// Create or update profile\r\nexport const createProfile = (\r\n\tformData,\r\n\thistory,\r\n\tedit = false\r\n ) => async dispatch => {\r\n\ttry {\r\n\t  const config = {\r\n\t\t headers: {\r\n\t\t\t'Content-Type': 'application/json'\r\n\t\t }\r\n\t  };\r\n \r\n\t  const res = await axios.post('/api/profile', formData, config);\r\n \r\n\t  dispatch({\r\n\t\t type: GET_PROFILE,\r\n\t\t payload: res.data\r\n\t  });\r\n \r\n\t  dispatch(setAlert(edit ? 'Profile Updated' : 'Profile Created', 'success'));\r\n \r\n\t  if (!edit) {\r\n\t\t history.push('/dashboard');\r\n\t  }\r\n\t} catch (err) {\r\n\t\tconst errors = err.response.data.errors;\r\n\r\n\t\tif (errors) {\r\n\t\t  errors.forEach(error => dispatch(setAlert(error.msg, 'danger')));\r\n\t\t}\r\n  \r\n\t\tdispatch({\r\n\t\t  type: PROFILE_ERROR,\r\n\t\t  payload: { msg: err.response.statusText, status: err.response.status }\r\n\t\t});\r\n\t}\r\n };\r\n\r\n //Add experience\r\n export const addExperience = (formData, history) => async dispatch => {\r\n\ttry {\r\n\t  const config = {\r\n\t\t headers: {\r\n\t\t\t'Content-Type': 'application/json'\r\n\t\t }\r\n\t  };\r\n \r\n\t  const res = await axios.put('/api/profile/experience', formData, config);\r\n \r\n\t  dispatch({\r\n\t\t type: UPDATE_PROFILE,\r\n\t\t payload: res.data\r\n\t  });\r\n \r\n\t  dispatch(setAlert('Experiece added', 'success'));\r\n \r\n\t\thistory.push('/dashboard');\r\n\r\n\t} catch (err) {\r\n\t\tconst errors = err.response.data.errors;\r\n\r\n\t\tif (errors) {\r\n\t\t  errors.forEach(error => dispatch(setAlert(error.msg, 'danger')));\r\n\t\t}\r\n  \r\n\t\tdispatch({\r\n\t\t  type: PROFILE_ERROR,\r\n\t\t  payload: { msg: err.response.statusText, status: err.response.status }\r\n\t\t});\r\n\t}\r\n };\r\n\r\n  //Add education\r\n\texport const addEducation = (formData, history) => async dispatch => {\r\n\t\ttry {\r\n\t\t\tconst config = {\r\n\t\t\t headers: {\r\n\t\t\t\t'Content-Type': 'application/json'\r\n\t\t\t }\r\n\t\t\t};\r\n\t \r\n\t\t\tconst res = await axios.put('/api/profile/education', formData, config);\r\n\t \r\n\t\t\tdispatch({\r\n\t\t\t type: UPDATE_PROFILE,\r\n\t\t\t payload: res.data\r\n\t\t\t});\r\n\t \r\n\t\t\tdispatch(setAlert('Education added', 'success'));\r\n\t \r\n\t\t\thistory.push('/dashboard');\r\n\t\r\n\t\t} catch (err) {\r\n\t\t\tconst errors = err.response.data.errors;\r\n\t\r\n\t\t\tif (errors) {\r\n\t\t\t\terrors.forEach(error => dispatch(setAlert(error.msg, 'danger')));\r\n\t\t\t}\r\n\t\t\r\n\t\t\tdispatch({\r\n\t\t\t\ttype: PROFILE_ERROR,\r\n\t\t\t\tpayload: { msg: err.response.statusText, status: err.response.status }\r\n\t\t\t});\r\n\t\t}\r\n\t };\r\n\r\n\t //Delete experience\r\n\t export const deleteExperience = id => async dispatch => {\r\n\t\t try {\r\n\t\t\t\t const res = await axios.delete(`/api/profile/experience/${id}`)\r\n\t\t\t\t dispatch({\r\n\t\t\t\t\t type: UPDATE_PROFILE,\r\n\t\t\t\t\t payload: res.data\r\n\t\t\t\t });\r\n\r\n\t\t\t\t dispatch(setAlert('Profile updated', 'success'));\r\n\t \r\n\t\t\t\t//  history.push('/dashboard');\r\n\t\t } catch(err) {\r\n\t\t\tconst errors = err.response.data.errors;\r\n\t\r\n\t\t\tif (errors) {\r\n\t\t\t\terrors.forEach(error => dispatch(setAlert(error.msg, 'danger')));\r\n\t\t\t}\r\n\t\t\r\n\t\t\tdispatch({\r\n\t\t\t\ttype: PROFILE_ERROR,\r\n\t\t\t\tpayload: { msg: err.response.statusText, status: err.response.status }\r\n\t\t\t});\r\n\t\t }\r\n\t }\r\n\r\n\t//Delete education\r\n\texport const deleteEducation = id => async dispatch => {\r\n\t\ttry {\r\n\t\t\t\tconst res = await axios.delete(`/api/profile/education/${id}`)\r\n\t\t\t\tdispatch({\r\n\t\t\t\t\ttype: UPDATE_PROFILE,\r\n\t\t\t\t\tpayload: res.data\r\n\t\t\t\t});\r\n\r\n\t\t\t\tdispatch(setAlert('Profile updated', 'success'));\r\n\t\r\n\t\t\t\t//  history.push('/dashboard');\r\n\t\t} catch(err) {\r\n\t\t\tconst errors = err.response.data.errors;\r\n\t\r\n\t\t\tif (errors) {\r\n\t\t\t\terrors.forEach(error => dispatch(setAlert(error.msg, 'danger')));\r\n\t\t\t}\r\n\t\t\r\n\t\t\tdispatch({\r\n\t\t\t\ttype: PROFILE_ERROR,\r\n\t\t\t\tpayload: { msg: err.response.statusText, status: err.response.status }\r\n\t\t\t});\r\n\t\t}\r\n\t}\r\n\r\n\t//Delete account and profile\r\n\texport const deleteAccount = () => async dispatch => {\r\n\t\ttry {\r\n\t\t\tif(window.confirm(\"Are sure? This operation will not be able undone\")) {\r\n\t\t\t\tawait axios.delete('/api/profile');\r\n\r\n\t\t\t\tdispatch({type: ACCOUNT_DELETED});\r\n\r\n\t\t\t\tdispatch({type: CLEAR_PROFILE});\r\n\t\r\n\t\t\t\tdispatch(setAlert('Account deleted', 'success'));\r\n\t\t\t}\r\n\t\r\n\t\t\t//  history.push('/dashboard');\r\n\t\t} catch(err) {\r\n\t\t\tconst errors = err.response.data.errors;\r\n\t\r\n\t\t\tif (errors) {\r\n\t\t\t\terrors.forEach(error => dispatch(setAlert(error.msg, 'danger')));\r\n\t\t\t}\r\n\t\t\r\n\t\t\tdispatch({\r\n\t\t\t\ttype: PROFILE_ERROR,\r\n\t\t\t\tpayload: { msg: err.response.statusText, status: err.response.status }\r\n\t\t\t});\r\n\t\t}\r\n\t}","import React from 'react';\r\nimport {Link} from 'react-router-dom';\r\n\r\nconst DashboardActions = () => {\r\n   return (\r\n      <div className=\"dash-buttons\">\r\n        <Link to=\"/edit-profile\" className=\"btn btn-light\"\r\n          ><i className=\"fas fa-user-circle text-primary\"></i> Edit Profile</Link>\r\n        <Link to=\"/add-experience\" className=\"btn btn-light\"\r\n          ><i className=\"fab fa-black-tie text-primary\"></i> Add Experience</Link>\r\n        <Link to=\"/add-education\" className=\"btn btn-light\"\r\n          ><i className=\"fas fa-graduation-cap text-primary\"></i> Add Education</Link>\r\n      </div>\r\n   )\r\n};\r\n\r\nexport default DashboardActions","import React, {Fragment} from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport Moment from 'react-moment'\r\nimport {connect} from 'react-redux'\r\nimport {deleteExperience} from '../../actions/profile'\r\n\r\nconst Experience = ({experience, deleteExperience}) => {\r\n\tconst experiences = experience.map( exp => (\r\n\t\t\t<tr key={exp._id}>\r\n\t\t\t\t<td>{exp.company}</td>\r\n\t\t\t\t<td className=\"hide-sm\">{exp.title}</td>\r\n\t\t\t\t<td>\r\n\t\t\t\t\t<Moment format=\"YYYY/MM/DD\">{exp.from}</Moment> - {\" \"}\r\n\t\t\t\t\t{exp.to === null ? ('Now') : (<Moment format=\"YYYY/MM/DD\">{exp.to}</Moment>)}\r\n\t\t\t\t</td>\r\n\t\t\t\t<td>\r\n\t\t\t\t\t<button className='btn btn-danger' onClick={() => deleteExperience(exp._id)}>\r\n\t\t\t\t\t\tDelete\r\n\t\t\t\t\t</button>\r\n\t\t\t\t</td>\r\n\t\t\t</tr>\r\n\t))\r\n\r\n\treturn (\r\n\t\t<Fragment>\r\n\t\t\t<h2 className=\"my-2\">Experience credentials</h2>\r\n\t\t\t<table className=\"table\">\r\n\t\t\t\t<thead>\r\n\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t<th>Company</th>\r\n\t\t\t\t\t\t<th className='hide-sm'>Title</th>\r\n\t\t\t\t\t\t<th className='hide-sm'>Years</th>\r\n\t\t\t\t\t\t<th/>\r\n\t\t\t\t\t</tr>\r\n\t\t\t\t</thead>\r\n\t\t\t\t<tbody>\r\n\t\t\t\t\t{experiences}\r\n\t\t\t\t</tbody>\r\n\t\t\t</table>\r\n\t\t</Fragment>\r\n\t)\r\n}\r\n\r\nExperience.propTypes = {\r\n\texperience: PropTypes.array.isRequired,\r\n\tdeleteExperience: PropTypes.func.isRequired,\r\n}\r\n\r\nexport default connect(null, {deleteExperience}) (Experience)\r\n","import React, {Fragment} from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport Moment from 'react-moment'\r\nimport {connect} from 'react-redux'\r\nimport {deleteEducation} from '../../actions/profile'\r\n\r\nconst Education = ({education, deleteEducation}) => {\r\n\tconst educations = education.map( edu => (\r\n\t\t\t<tr key={edu._id}>\r\n\t\t\t\t<td>{edu.school}</td>\r\n\t\t\t\t<td className=\"hide-sm\">{edu.degree}</td>\r\n\t\t\t\t<td>\r\n\t\t\t\t\t<Moment format=\"YYYY/MM/DD\">{edu.from}</Moment> - {\" \"}\r\n\t\t\t\t\t{edu.to === null ? ('Now') : (<Moment format=\"YYYY/MM/DD\">{edu.to}</Moment>)}\r\n\t\t\t\t</td>\r\n\t\t\t\t<td>\r\n\t\t\t\t\t<button className='btn btn-danger' onClick = {() => deleteEducation(edu._id)}>\r\n\t\t\t\t\t\tDelete\r\n\t\t\t\t\t</button>\r\n\t\t\t\t</td>\r\n\t\t\t</tr>\r\n\t))\r\n\r\n\treturn (\r\n\t\t<Fragment>\r\n\t\t\t<h2 className=\"my-2\">Education credentials</h2>\r\n\t\t\t<table className=\"table\">\r\n\t\t\t\t<thead>\r\n\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t<th>School</th>\r\n\t\t\t\t\t\t<th className='hide-sm'>Degree</th>\r\n\t\t\t\t\t\t<th className='hide-sm'>Years</th>\r\n\t\t\t\t\t\t<th/>\r\n\t\t\t\t\t</tr>\r\n\t\t\t\t</thead>\r\n\t\t\t\t<tbody>\r\n\t\t\t\t\t{educations}\r\n\t\t\t\t</tbody>\r\n\t\t\t</table>\r\n\t\t</Fragment>\r\n\t)\r\n}\r\n\r\nEducation.propTypes = {\r\n\teducation: PropTypes.array.isRequired,\r\n\tdeleteEducation: PropTypes.func.isRequired,\r\n}\r\n\r\nexport default connect(null, {deleteEducation}) (Education)\r\n","import React, {useEffect, Fragment} from 'react';\r\nimport {Link} from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\nimport {connect} from 'react-redux';\r\nimport Spinner from '../layout/Spinner';\r\nimport {getCurrentProfile} from '../../actions/profile';\r\nimport {deleteAccount} from '../../actions/profile';\r\nimport DashboardActions from './DashboardActions';\r\nimport Experience from './Experience'\r\nimport Education from './Education'\r\n\r\nconst Dashboard = ({\r\n\tgetCurrentProfile,\r\n\tdeleteAccount,\r\n\tauth: {user}, \r\n\tprofile: {profile, loading}\r\n}) => {\r\n\tuseEffect(() => {\r\n\t\tgetCurrentProfile()\r\n\t}, [getCurrentProfile])\r\n\r\n\treturn loading && profile === null ? <Spinner/> : <Fragment>\r\n\t\t<h1 className=\"large text-primary\">Dashboard</h1>\r\n\t\t<p className=\"lead\">\r\n\t\t\t<i className=\"fas fa-user\"></i>\r\n\t\t\t{' '}Welcome {user && user.name}\r\n\t\t</p>\r\n{profile !== null ? (\r\n\t<Fragment>\r\n\t\t<DashboardActions/>\r\n\t\t<Experience experience={profile.experience}/>\t\r\n\t\t<Education education={profile.education}/>\t\r\n\t\t<button className=\"btn btn-danger\" onClick = {() => deleteAccount()}>\r\n\t\t\t<i className='fas fa-user-minus' />Delete my account\r\n\t\t</button>\r\n\t</Fragment>\r\n\t\t) : (<Fragment>\r\n\t\t<p>You have not yet setup a profile, please add some info</p>\r\n\t\t<Link to='/create-profile' className=\"btn btn-primary my-1\">\r\n\t\t\tCreate Profile\r\n\t\t</Link>\r\n\t\t</Fragment>)}\r\n\t</Fragment>\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  auth: state.auth,\r\n  profile: state.profile\r\n});\r\n\r\nDashboard.propTypes = {\r\n  getCurrentProfile: PropTypes.func.isRequired,\r\n  deleteAccount: PropTypes.func.isRequired,\r\n  auth: PropTypes.object.isRequired,\r\n  profile: PropTypes.object.isRequired\r\n};\r\n\r\nexport default connect(mapStateToProps, { getCurrentProfile, deleteAccount})(Dashboard);\r\n","import React, {Fragment, useState} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport { createProfile } from '../../actions/profile';\r\nimport { withRouter, Link } from 'react-router-dom';\r\n\r\nconst CreateProfile = ({createProfile, history}) => {\r\n   const [formData, setFormData] = useState({\r\n      company: '',\r\n      website: '',\r\n      location: '',\r\n      status: '',\r\n      skills: '',\r\n      githubusername: '',\r\n      bio: '',\r\n      twitter: '', \r\n      facebook: '',\r\n      linkedin: '',\r\n      youtube: '',\r\n      instagram: '' \r\n   });\r\n\r\n   const [displaySocialInputs, toggleSocialInputs] = useState(false);\r\n\r\n   const {\r\n      company,\r\n      website,\r\n      location,\r\n      status,\r\n      skills,\r\n      githubusername,\r\n      bio,\r\n      twitter, \r\n      facebook,\r\n      linkedin,\r\n      youtube,\r\n      instagram\r\n   } = formData\r\n\r\n   const onChange = e => {\r\n      \r\n      setFormData({...formData, [e.target.name]: e.target.value})};\r\n      console.log(`formData`, formData)\r\n\r\n   const onSubmit = e => {\r\n      e.preventDefault();\r\n      createProfile(formData, history)\r\n   }\r\n\r\n   return (\t<Fragment>\r\n      <h1 className='large text-primary'>Create Your Profile</h1>\r\n      <p className='lead'>\r\n         <i className='fas fa-user' /> Let's get some information to make your\r\n         profile stand out\r\n      </p>\r\n      <small>* = required field</small>\r\n      <form className='form' onSubmit={e => onSubmit(e)}>\r\n         <div className='form-group'>\r\n            <select name='status' value={status} onChange={e => onChange(e)}>\r\n               <option value='0'>* Select Professional Status</option>\r\n               <option value='Developer'>Developer</option>\r\n               <option value='Junior Developer'>Junior Developer</option>\r\n               <option value='Senior Developer'>Senior Developer</option>\r\n               <option value='Manager'>Manager</option>\r\n               <option value='Student or Learning'>Student or Learning</option>\r\n               <option value='Instructor'>Instructor or Teacher</option>\r\n               <option value='Intern'>Intern</option>\r\n               <option value='Other'>Other</option>\r\n            </select>\r\n            <small className='form-text'>\r\n               Give us an idea of where you are at in your career\r\n            </small>\r\n         </div>\r\n         <div className='form-group'>\r\n            <input\r\n               type='text'\r\n               placeholder='Company'\r\n               name='company'\r\n               value={company}\r\n               onChange={e => onChange(e)}\r\n            />\r\n            <small className='form-text'>\r\n               Could be your own company or one you work for\r\n            </small>\r\n         </div>\r\n         <div className='form-group'>\r\n            <input\r\n               type='text'\r\n               placeholder='Website'\r\n               name='website'\r\n               value={website}\r\n               onChange={e => onChange(e)}\r\n            />\r\n            <small className='form-text'>\r\n               Could be your own or a company website\r\n            </small>\r\n         </div>\r\n         <div className='form-group'>\r\n            <input\r\n               type='text'\r\n               placeholder='Location'\r\n               name='location'\r\n               value={location}\r\n               onChange={e => onChange(e)}\r\n            />\r\n            <small className='form-text'>\r\n               City & state suggested (eg. Boston, MA)\r\n            </small>\r\n         </div>\r\n         <div className='form-group'>\r\n            <input\r\n               type='text'\r\n               placeholder='* Skills'\r\n               name='skills'\r\n               value={skills}\r\n               onChange={e => onChange(e)}\r\n            />\r\n            <small className='form-text'>\r\n               Please use comma separated values (eg. HTML,CSS,JavaScript,PHP)\r\n            </small>\r\n         </div>\r\n         <div className='form-group'>\r\n            <input\r\n               type='text'\r\n               placeholder='Github Username'\r\n               name='githubusername'\r\n               value={githubusername}\r\n               onChange={e => onChange(e)}\r\n            />\r\n            <small className='form-text'>\r\n               If you want your latest repos and a Github link, include your\r\n               username\r\n            </small>\r\n         </div>\r\n         <div className='form-group'>\r\n            <textarea\r\n               placeholder='A short bio of yourself'\r\n               name='bio'\r\n               value={bio}\r\n               onChange={e => onChange(e)}\r\n            />\r\n            <small className='form-text'>Tell us a little about yourself</small>\r\n         </div>\r\n\r\n         <div className='my-2'>\r\n            <button\r\n               onClick={() => toggleSocialInputs(!displaySocialInputs)}\r\n               type='button'\r\n               className='btn btn-light'\r\n            >\r\n               Add Social Network Links\r\n            </button>\r\n            <span>Optional</span>\r\n         </div>\r\n         {displaySocialInputs && (\r\n            <Fragment>\r\n               <div className='form-group social-input'>\r\n                  <i className='fab fa-twitter fa-2x' />\r\n                  <input\r\n                     type='text'\r\n                     placeholder='Twitter URL'\r\n                     name='twitter'\r\n                     value={twitter}\r\n                     onChange={e => onChange(e)}\r\n                  />\r\n               </div>\r\n\r\n               <div className='form-group social-input'>\r\n                  <i className='fab fa-facebook fa-2x' />\r\n                  <input\r\n                     type='text'\r\n                     placeholder='Facebook URL'\r\n                     name='facebook'\r\n                     value={facebook}\r\n                     onChange={e => onChange(e)}\r\n                  />\r\n               </div>\r\n\r\n               <div className='form-group social-input'>\r\n                  <i className='fab fa-youtube fa-2x' />\r\n                  <input\r\n                     type='text'\r\n                     placeholder='YouTube URL'\r\n                     name='youtube'\r\n                     value={youtube}\r\n                     onChange={e => onChange(e)}\r\n                  />\r\n               </div>\r\n\r\n               <div className='form-group social-input'>\r\n                  <i className='fab fa-linkedin fa-2x' />\r\n                  <input\r\n                     type='text'\r\n                     placeholder='Linkedin URL'\r\n                     name='linkedin'\r\n                     value={linkedin}\r\n                     onChange={e => onChange(e)}\r\n                  />\r\n               </div>\r\n\r\n               <div className='form-group social-input'>\r\n                  <i className='fab fa-instagram fa-2x' />\r\n                  <input\r\n                     type='text'\r\n                     placeholder='Instagram URL'\r\n                     name='instagram'\r\n                     value={instagram}\r\n                     onChange={e => onChange(e)}\r\n                  />\r\n               </div>\r\n            </Fragment>\r\n         )}\r\n\r\n\t\t    <input type='submit' className='btn btn-primary my-1' />\r\n         <Link className='btn btn-light my-1' to='/dashboard'>\r\n            Go Back\r\n         </Link>\r\n      </form>\r\n   </Fragment>)\r\n};\r\n\r\nCreateProfile.propTypes = {\r\n   createProfile: PropTypes.func.isRequired\r\n};\r\n\r\nexport default connect(null, {createProfile}) (withRouter(CreateProfile));","import React, {Fragment, useState, useEffect} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport { createProfile, getCurrentProfile } from '../../actions/profile';\r\nimport { withRouter, Link } from 'react-router-dom';\r\n\r\nconst EditProfile = ({\r\n\tprofile: {profile, loading},\r\n\tcreateProfile,\r\n\tgetCurrentProfile,\r\n\thistory\r\n}) => {\r\n   const [formData, setFormData] = useState({\r\n      company: '',\r\n      website: '',\r\n      location: '',\r\n      status: '',\r\n      skills: '',\r\n      githubusername: '',\r\n      bio: '',\r\n      twitter: '', \r\n      facebook: '',\r\n      linkedin: '',\r\n      youtube: '',\r\n      instagram: '' \r\n   });\r\n\r\n\t const [displaySocialInputs, toggleSocialInputs] = useState(false);\r\n\t \r\n\t useEffect(() => {\r\n\t\t getCurrentProfile();\r\n\t\t setFormData({\r\n\t\t\t company: loading || !profile.company ? '' : profile.company,\r\n\t\t\t website: loading || !profile.website ? '' : profile.website,\r\n\t\t\t location: loading || !profile.location ? '' : profile.location,\r\n\t\t\t status: loading || !profile.status ? '' : profile.status,\r\n\t\t\t skills: loading || !profile.skills ? '' : profile.skills.join(','),\r\n\t\t\t githubusername: loading || !profile.githubusername ? '' : profile.githubusername,\r\n\t\t\t bio: loading || !profile.bio ? '' : profile.bio,\r\n\t\t\t twitter: loading || !profile.social ? '' : profile.social.twitter,\r\n\t\t\t facebook: loading || !profile.social ? '' : profile.social.facebook,\r\n\t\t\t linkedin: loading || !profile.social ? '' : profile.social.linkedin,\r\n\t\t\t youtube: loading || !profile.social ? '' : profile.social.youtube,\r\n\t\t\t instagram: loading || !profile.social ? '' : profile.social.instagram\r\n\t\t })\r\n\t }, [loading, getCurrentProfile, profile]);\r\n\r\n   const {\r\n      company,\r\n      website,\r\n      location,\r\n      status,\r\n      skills,\r\n      githubusername,\r\n      bio,\r\n      twitter, \r\n      facebook,\r\n      linkedin,\r\n      youtube,\r\n      instagram\r\n   } = formData\r\n\r\n   const onChange = e => setFormData({...formData, [e.target.name]: e.target.value});\r\n\r\n   const onSubmit = e => {\r\n      e.preventDefault();\r\n      createProfile(formData, history, true)\r\n   }\r\n\r\n   return (\t<Fragment>\r\n      <h1 className='large text-primary'>Edit Your Profile</h1>\r\n      <p className='lead'>\r\n         <i className='fas fa-user' /> Let's get some information to make your\r\n         profile stand out\r\n      </p>\r\n      <small>* = required field</small>\r\n      <form className='form' onSubmit={e => onSubmit(e)}>\r\n         <div className='form-group'>\r\n            <select name='status' value={status} onChange={e => onChange(e)}>\r\n               <option value='0'>* Select Professional Status</option>\r\n               <option value='Developer'>Developer</option>\r\n               <option value='Junior Developer'>Junior Developer</option>\r\n               <option value='Senior Developer'>Senior Developer</option>\r\n               <option value='Manager'>Manager</option>\r\n               <option value='Student or Learning'>Student or Learning</option>\r\n               <option value='Instructor'>Instructor or Teacher</option>\r\n               <option value='Intern'>Intern</option>\r\n               <option value='Other'>Other</option>\r\n            </select>\r\n            <small className='form-text'>\r\n               Give us an idea of where you are at in your career\r\n            </small>\r\n         </div>\r\n         <div className='form-group'>\r\n            <input\r\n               type='text'\r\n               placeholder='Company'\r\n               name='company'\r\n               value={company}\r\n               onChange={e => onChange(e)}\r\n            />\r\n            <small className='form-text'>\r\n               Could be your own company or one you work for\r\n            </small>\r\n         </div>\r\n         <div className='form-group'>\r\n            <input\r\n               type='text'\r\n               placeholder='Website'\r\n               name='website'\r\n               value={website}\r\n               onChange={e => onChange(e)}\r\n            />\r\n            <small className='form-text'>\r\n               Could be your own or a company website\r\n            </small>\r\n         </div>\r\n         <div className='form-group'>\r\n            <input\r\n               type='text'\r\n               placeholder='Location'\r\n               name='location'\r\n               value={location}\r\n               onChange={e => onChange(e)}\r\n            />\r\n            <small className='form-text'>\r\n               City & state suggested (eg. Boston, MA)\r\n            </small>\r\n         </div>\r\n         <div className='form-group'>\r\n            <input\r\n               type='text'\r\n               placeholder='* Skills'\r\n               name='skills'\r\n               value={skills}\r\n               onChange={e => onChange(e)}\r\n            />\r\n            <small className='form-text'>\r\n               Please use comma separated values (eg. HTML,CSS,JavaScript,PHP)\r\n            </small>\r\n         </div>\r\n         <div className='form-group'>\r\n            <input\r\n               type='text'\r\n               placeholder='Github Username'\r\n               name='githubusername'\r\n               value={githubusername}\r\n               onChange={e => onChange(e)}\r\n            />\r\n            <small className='form-text'>\r\n               If you want your latest repos and a Github link, include your\r\n               username\r\n            </small>\r\n         </div>\r\n         <div className='form-group'>\r\n            <textarea\r\n               placeholder='A short bio of yourself'\r\n               name='bio'\r\n               value={bio}\r\n               onChange={e => onChange(e)}\r\n            />\r\n            <small className='form-text'>Tell us a little about yourself</small>\r\n         </div>\r\n\r\n         <div className='my-2'>\r\n            <button\r\n               onClick={() => toggleSocialInputs(!displaySocialInputs)}\r\n               type='button'\r\n               className='btn btn-light'\r\n            >\r\n               Add Social Network Links\r\n            </button>\r\n            <span>Optional</span>\r\n         </div>\r\n         {displaySocialInputs && (\r\n            <Fragment>\r\n               <div className='form-group social-input'>\r\n                  <i className='fab fa-twitter fa-2x' />\r\n                  <input\r\n                     type='text'\r\n                     placeholder='Twitter URL'\r\n                     name='twitter'\r\n                     value={twitter}\r\n                     onChange={e => onChange(e)}\r\n                  />\r\n               </div>\r\n\r\n               <div className='form-group social-input'>\r\n                  <i className='fab fa-facebook fa-2x' />\r\n                  <input\r\n                     type='text'\r\n                     placeholder='Facebook URL'\r\n                     name='facebook'\r\n                     value={facebook}\r\n                     onChange={e => onChange(e)}\r\n                  />\r\n               </div>\r\n\r\n               <div className='form-group social-input'>\r\n                  <i className='fab fa-youtube fa-2x' />\r\n                  <input\r\n                     type='text'\r\n                     placeholder='YouTube URL'\r\n                     name='youtube'\r\n                     value={youtube}\r\n                     onChange={e => onChange(e)}\r\n                  />\r\n               </div>\r\n\r\n               <div className='form-group social-input'>\r\n                  <i className='fab fa-linkedin fa-2x' />\r\n                  <input\r\n                     type='text'\r\n                     placeholder='Linkedin URL'\r\n                     name='linkedin'\r\n                     value={linkedin}\r\n                     onChange={e => onChange(e)}\r\n                  />\r\n               </div>\r\n\r\n               <div className='form-group social-input'>\r\n                  <i className='fab fa-instagram fa-2x' />\r\n                  <input\r\n                     type='text'\r\n                     placeholder='Instagram URL'\r\n                     name='instagram'\r\n                     value={instagram}\r\n                     onChange={e => onChange(e)}\r\n                  />\r\n               </div>\r\n            </Fragment>\r\n         )}\r\n\r\n         <input type='submit' className='btn btn-primary my-1'/>\r\n         <Link className='btn btn-light my-1' to='/dashboard'>\r\n            Go Back\r\n         </Link>\r\n      </form>\r\n   </Fragment>)\r\n};\r\n\r\nEditProfile.propTypes = {\r\n\t createProfile: PropTypes.func.isRequired,\r\n\t getCurrentProfile: PropTypes.func.isRequired,\r\n\t profile: PropTypes.object.isRequired,\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n\tprofile: state.profile\r\n})\r\n\r\nexport default connect(mapStateToProps, {createProfile, getCurrentProfile}) (withRouter(EditProfile));","import React, {Fragment, useState} from 'react'\r\nimport { withRouter} from 'react-router-dom'\r\nimport PropTypes from 'prop-types'\r\nimport {connect} from 'react-redux'\r\nimport {addExperience} from '../../actions/profile'\r\n\r\nconst AddExperience = ({addExperience, history}) => {\r\n\tconst [formData, setFormData] = useState({\r\n\t\tcompany: '',\r\n\t\ttitle: '',\r\n\t\tlocation: '',\r\n\t\tfrom: '',\r\n\t\tto: '',\r\n\t\tcurrent: false,\r\n\t\tdescription: '',\r\n\t});\r\n\r\n\tconst [toDateDisabled, toggleDisabled] = useState(false);\r\n\r\n\tconst {company, title, location, from, to, current, description} = formData;\r\n\t\r\n\tconst onChange = e => setFormData({...formData, [e.target.name]: e.target.value})\r\n\r\n\treturn (\r\n\t\t<Fragment>\r\n\t\t\t  <h1 className=\"large text-primary\">\r\n       Add An Experience\r\n      </h1>\r\n      <p className=\"lead\">\r\n        <i className=\"fas fa-code-branch\"></i> Add any developer/programming\r\n        positions that you have had in the past\r\n      </p>\r\n      <small>* = required field</small>\r\n      <form className=\"form\" onSubmit = {e => {\r\n\t\t\t\te.preventDefault();\r\n\t\t\t\taddExperience(formData, history)\r\n\t\t\t}}>\r\n        <div className=\"form-group\">\r\n          <input type=\"text\" placeholder=\"* Job Title\" name=\"title\" value={title} onChange = {e => onChange(e)} required />\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <input type=\"text\" placeholder=\"* Company\" name=\"company\" value={company} onChange = {e => onChange(e)} required />\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <input type=\"text\" placeholder=\"Location\" name=\"location\" value={location} onChange = {e => onChange(e)}/>\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <h4>From Date</h4>\r\n          <input type=\"date\" name=\"from\" value={from} onChange = {e => onChange(e)}/>\r\n        </div>\r\n         <div className=\"form-group\">\r\n\t\t\t\t\t<p><input\r\n\t\t\t\t\t\ttype=\"checkbox\"\r\n\t\t\t\t\t\tname=\"current\" \r\n\t\t\t\t\t\tchecked={current} \r\n\t\t\t\t\t\tvalue={current} \r\n\t\t\t\t\t\tonChange = {e => {\r\n\t\t\t\t\t\tsetFormData({...formData, current: !current})\r\n\t\t\t\t\t\ttoggleDisabled(!toDateDisabled)\r\n\t\t\t\t\t}}/> {' '}Current Job</p>\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <h4>To Date</h4>\r\n\t\t\t\t\t<input \r\n\t\t\t\t\t\ttype=\"date\"\r\n\t\t\t\t\t\tname=\"to\"\r\n\t\t\t\t\t\tvalue={to}\r\n\t\t\t\t\t\tonChange = {e => onChange(e)}\r\n\t\t\t\t\t\tdisabled={toDateDisabled ? 'disabled' : ''}/>\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <textarea\r\n            name=\"description\"\r\n            cols=\"30\"\r\n            rows=\"5\"\r\n\t\t\t\t\t\tplaceholder=\"Job Description\"\r\n\t\t\t\t\t\tvalue={description} onChange = {e => onChange(e)} \r\n          ></textarea>\r\n        </div>\r\n        <input type=\"submit\" className=\"btn btn-primary my-1\" />\r\n        <a className=\"btn btn-light my-1\" href=\"dashboard.html\">Go Back</a>\r\n      </form>\r\n\t\t</Fragment>\r\n\t)\r\n}\r\n\r\nAddExperience.propTypes = {\r\n\taddExperience: PropTypes.func.isRequired,\r\n}\r\n\r\nexport default connect(null, {addExperience})(withRouter(AddExperience))\r\n","import React, {Fragment, useState} from 'react'\r\nimport {withRouter} from 'react-router-dom'\r\nimport PropTypes from 'prop-types'\r\nimport {connect} from 'react-redux'\r\nimport {addEducation} from '../../actions/profile'\r\n\r\nconst AddEducation = ({addEducation, history}) => {\r\n\tconst [formData, setFormData] = useState({\r\n\t\tschool: '',\r\n\t\tdegree: '',\r\n\t\tfieldOfStudy: '',\r\n\t\tfrom: '',\r\n\t\tto: '',\r\n\t\tcurrent: false,\r\n\t\tdescription: '',\r\n\t});\r\n\r\n\tconst [toDateDisabled, toggleDisabled] = useState(false);\r\n\r\n\tconst {school, degree, fieldOfStudy, from, to, current, description} = formData;\r\n\t\r\n\tconst onChange = e => setFormData({...formData, [e.target.name]: e.target.value})\r\n\r\n\treturn (\r\n\t\t<Fragment>\r\n\t\t\t  <h1 className=\"large text-primary\">\r\n       Add Your Education\r\n      </h1>\r\n      <p className=\"lead\">\r\n        <i className=\"fas fa-code-branch\"></i> Add any shcool you attended\r\n      </p>\r\n      <small>* = required field</small>\r\n      <form className=\"form\" onSubmit = {e => {\r\n\t\t\t\te.preventDefault();\r\n\t\t\t\taddEducation(formData, history)\r\n\t\t\t}}>\r\n        <div className=\"form-group\">\r\n\t\t\t\t\t<input \r\n\t\t\t\t\ttype=\"text\" \r\n\t\t\t\t\tplaceholder=\"* School or Bootcamp\" \r\n\t\t\t\t\tname=\"school\" \r\n\t\t\t\t\tvalue={school} \r\n\t\t\t\t\tonChange = {e => onChange(e)} required />\r\n        </div>\r\n\r\n        <div className=\"form-group\">\r\n\t\t\t\t\t<input \r\n\t\t\t\t\ttype=\"text\" \r\n\t\t\t\t\tplaceholder=\"* Degree or Certificate \" \r\n\t\t\t\t\tname=\"degree\" \r\n\t\t\t\t\tvalue={degree} \r\n\t\t\t\t\tonChange = {e => onChange(e)} \r\n\t\t\t\t\trequired />\r\n        </div>\r\n\r\n        <div className=\"form-group\">\r\n\t\t\t\t\t<input \r\n\t\t\t\t\ttype=\"text\" \r\n\t\t\t\t\tplaceholder=\"Field of study\" \r\n\t\t\t\t\tname=\"fieldOfStudy\" \r\n\t\t\t\t\tvalue={fieldOfStudy} \r\n\t\t\t\t\tonChange = {e => onChange(e)}/>\r\n        </div>\r\n\r\n        <div className=\"form-group\">\r\n          <h4>From Date</h4>\r\n          <input type=\"date\" name=\"from\" value={from} onChange = {e => onChange(e)}/>\r\n        </div>\r\n\r\n         <div className=\"form-group\">\r\n\t\t\t\t\t<p><input\r\n\t\t\t\t\t\ttype=\"checkbox\"\r\n\t\t\t\t\t\tname=\"current\" \r\n\t\t\t\t\t\tchecked={current} \r\n\t\t\t\t\t\tvalue={current} \r\n\t\t\t\t\t\tonChange = {e => {\r\n\t\t\t\t\t\tsetFormData({...formData, current: !current})\r\n\t\t\t\t\t\ttoggleDisabled(!toDateDisabled)\r\n\t\t\t\t\t}}/> {' '}Current School</p>\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <h4>To Date</h4>\r\n\t\t\t\t\t<input \r\n\t\t\t\t\t\ttype=\"date\"\r\n\t\t\t\t\t\tname=\"to\"\r\n\t\t\t\t\t\tvalue={to}\r\n\t\t\t\t\t\tonChange = {e => onChange(e)}\r\n\t\t\t\t\t\tdisabled={toDateDisabled ? 'disabled' : ''}/>\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <textarea\r\n            name=\"description\"\r\n            cols=\"30\"\r\n            rows=\"5\"\r\n\t\t\t\t\t\tplaceholder=\"Program Description\"\r\n\t\t\t\t\t\tvalue={description} onChange = {e => onChange(e)} \r\n          ></textarea>\r\n        </div>\r\n        <input type=\"submit\" className=\"btn btn-primary my-1\" />\r\n        <a className=\"btn btn-light my-1\" href=\"dashboard.html\">Go Back</a>\r\n      </form>\r\n\t\t</Fragment>\r\n\t)\r\n}\r\n\r\nAddEducation.propTypes = {\r\n\taddEducation: PropTypes.func.isRequired,\r\n}\r\n\r\nexport default connect(null, {addEducation})(withRouter(AddEducation))\r\n","import React from 'react';\r\nimport {Route, Redirect} from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\n\r\nconst PrivateRoute = ({\r\n\tcomponent: Component,\r\n\tauth: {isAuthenticated, loading},\r\n\t ...rest\r\n}) => (\r\n\t<Route \r\n\t\t{...rest}\r\n\t\trender = {\r\n\t\t\tprops => !isAuthenticated && !loading ? (<Redirect to=\"/login\"/>) : (<Component {...props}/>)\r\n\t\t}\r\n\t/>\r\n)\r\n\r\nPrivateRoute.propTypes = {\r\n\tauth: PropTypes.object.isRequired,\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n\tauth: state.auth\r\n})\r\n\r\nexport default connect(mapStateToProps) (PrivateRoute)\r\n","import React from 'react'\r\nimport {Link} from 'react-router-dom'\r\nimport PropTypes from 'prop-types'\r\n\r\nconst ProfileItem = ({profile: {\r\n\tuser: {_id, name, avatar},\r\n\tstatus,\r\n\tcompany,\r\n\tlocation,\r\n\tskills\r\n}}) => {\r\n\treturn (\r\n\t\t<div className='profile bg-light'>\r\n\t\t\t<img src={avatar} alt=\"\" className='round-img'/>\r\n\t\t\t<div>\r\n\t\t\t\t<h2>{name}</h2>\r\n\t\t\t\t<p>{status} {company && <span> at {company}</span>}</p>\r\n\t\t\t\t<p className=\"my-1\">{location && <span>{location}</span>}</p>\r\n\t\t\t\t<Link to={`/profile/${_id}`} className='btn btn-primary'>\r\n\t\t\t\t\tView Profile\r\n\t\t\t\t</Link>\r\n\t\t\t</div>\r\n\t\t\t<ul>\r\n\t\t\t\t{skills.slice(0, 4).map((skill, index) => \r\n\t\t\t\t\t(<li key={index} className='text-primary'>\r\n\t\t\t\t\t\t<i className=\"fas fa-check\"/>{skill}\r\n\t\t\t\t\t</li>)\r\n\t\t\t\t)}\r\n\t\t\t</ul>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nProfileItem.propTypes = {\r\n\tprofile: PropTypes.object.isRequired,\r\n}\r\n\r\nexport default ProfileItem\r\n","import React, {useEffect, Fragment} from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport {connect} from 'react-redux'\r\nimport {getProfiles} from '../../actions/profile'\r\nimport Spinner from '../layout/Spinner'\r\nimport ProfileItem from './ProfileItem'\r\n\r\nconst Profiles = ({getProfiles, profile: {loading, profiles}}) => {\r\n\r\n\tuseEffect(() => {\r\n\t\tgetProfiles()\r\n\t}, [getProfiles]);\r\n\r\n\r\n\treturn (\r\n\t\t<Fragment>\r\n\t\t\t{loading ? <Spinner/> : (\r\n\t\t\t\t<Fragment>\r\n\t\t\t\t\t<h1 className=\"large text-primary\">Developers profiles</h1>\r\n\t\t\t\t\t<p className=\"lead\">\r\n\t\t\t\t\t\t<i className=\"fab fa-connectdevelop\">\r\n\t\t\t\t\t\t\tBrowse and connect with developers\r\n\t\t\t\t\t\t</i>\r\n\t\t\t\t\t</p>\r\n\t\t\t\t\t<div className=\"profiles\">\r\n\t\t\t\t\t\t{profiles.length > 0 ? (\r\n\t\t\t\t\t\t\tprofiles.map(profile => {\r\n\t\t\t\t\t\t\t\treturn <ProfileItem key={profile._id} profile={profile}></ProfileItem>\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t) : (<h4> No profiles found </h4>)}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</Fragment>\r\n\t\t\t)}\r\n\t\t</Fragment>\r\n\t)\r\n}\r\n\r\nProfiles.propTypes = {\r\n\tprofile: PropTypes.object.isRequired,\r\n\tgetProfiles: PropTypes.func.isRequired,\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n\tprofile: state.profile,\r\n})\r\n\r\nexport default connect(mapStateToProps, {getProfiles}) (Profiles)\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nconst ProfileTop = ({\r\n\tprofile: {\r\n\t\tcompany,\r\n\t\twebsite,\r\n\t\tsocial,\r\n\t\tstatus,\r\n\t\tlocation,\r\n\t\tuser: {\r\n\t\t\tavatar,\r\n\t\t\tname\r\n\t\t}\r\n\t}\r\n}) => {\r\n\t\treturn (<div className=\"profile-top bg-primary p-2\">\r\n\t\t\t<img\r\n\t\t\t\tclassName=\"round-img my-1\"\r\n\t\t\t\tsrc={avatar}\r\n\t\t\t\talt=\"\"\r\n\t\t\t/>\r\n\t\t\t<h1 className=\"large\">{name}</h1>\r\n\t\t\t<p className=\"lead\">{status} {company && <span>at {company}</span>}</p>\r\n\t\t\t<p>{location && <span>at {location}</span>}</p>\r\n\t\t\t<div className=\"icons my-1\">\r\n\t\t\t\t{website && (\r\n\t\t\t\t\t<a href={website} target=\"_blank\" rel=\"noopener noreferrer\">\r\n\t\t\t\t\t\t<i className=\"fas fa-globe fa-2x\"></i>\r\n\t\t\t\t\t</a>\r\n\t\t\t\t)}\r\n\t\t\t\t{social && social.twitter && (\r\n\t\t\t\t\t<a href={social.twitter} target=\"_blank\" rel=\"noopener noreferrer\">\r\n\t\t\t\t\t\t<i className=\"fab fa-twitter fa-2x\"></i>\r\n\t\t\t\t\t</a>\t\t\t\r\n\t\t\t\t)}\r\n\t\t\t\t{social && social.facebook && (\r\n\t\t\t\t\t<a href={social.facebook} target=\"_blank\" rel=\"noopener noreferrer\">\r\n\t\t\t\t\t\t<i className=\"fab fa-facebook fa-2x\"></i>\r\n\t\t\t\t\t</a>\t\t\t\r\n\t\t\t\t)}\r\n\t\t\t\t{social && social.youtube && (\r\n\t\t\t\t\t<a href={social.youtube} target=\"_blank\" rel=\"noopener noreferrer\">\r\n\t\t\t\t\t\t<i className=\"fab fa-youtube fa-2x\"></i>\r\n\t\t\t\t\t</a>\t\t\t\r\n\t\t\t\t)}\r\n\t\t\t\t{social && social.instagram && (\r\n\t\t\t\t\t<a href={social.instagram} target=\"_blank\" rel=\"noopener noreferrer\">\r\n\t\t\t\t\t\t<i className=\"fab fa-instagram fa-2x\"></i>\r\n\t\t\t\t\t</a>\t\t\t\r\n\t\t\t\t)}\r\n\t\t\t\t{social && social.linkedin && (\r\n\t\t\t\t\t<a href={social.linkedin} target=\"_blank\" rel=\"noopener noreferrer\">\r\n\t\t\t\t\t\t<i className=\"fab fa-linkedin fa-2x\"></i>\r\n\t\t\t\t\t</a>\t\t\t\r\n\t\t\t\t)}\r\n\t\t\t</div>\r\n\t\t</div>)\r\n}\r\n\r\nProfileTop.propTypes = {\r\n\tprofile: PropTypes.object.isRequired,\r\n}\r\n\r\nexport default ProfileTop","import React, {Fragment} from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nconst ProfileAbout = ({\r\n\tprofile: {\r\n\t\tbio,\r\n\t\tskills,\r\n\t\tuser: {\r\n\t\t\tname\r\n\t\t}\r\n\t}\r\n}) => {\r\n\treturn (\r\n\t\t<div className=\"profile-about bg-light p-2\">\r\n\t\t\t{bio && (<Fragment>\r\n\t\t\t\t<h2 className=\"text-primary\">{name.split(' ')[0]}s Bio</h2>\r\n\t\t\t\t<p>\r\n\t\t\t\t\t{bio}\r\n\t\t\t\t</p>\r\n\t\t\t\t<div className=\"line\"></div>\r\n\t\t\t</Fragment>\r\n\t\t\t)}\r\n\t\t\t<h2 className=\"text-primary\">Skill Set</h2>\r\n\t\t\t<div className=\"skills\">\r\n\t\t\t\t{skills.map((skill, index) => {\r\n\t\t\t\t\treturn (<div key={index} className=\"p-1\">\r\n\t\t\t\t\t\t<i className=\"fas fa-check\">{skill}</i>\r\n\t\t\t\t\t</div>)\r\n\t\t\t\t})}\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nProfileAbout.propTypes = {\r\n\tprofile: PropTypes.object.isRequired,\r\n}\r\n\r\nexport default ProfileAbout\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport Moment from 'react-moment'\r\n\r\nconst ProfileExperience = ({\r\n\texperience: {\r\n\t\tcompany, \r\n\t\ttitle, \r\n\t\tlocation,\r\n\t\tto, \r\n\t\tfrom, \r\n\t\tcurrent, \r\n\t\tdescription\r\n\t}\r\n}) => <div>\r\n\t<h3 className=\"text-dark\">{company}</h3>\r\n\t<p>\r\n\t\t<Moment format='YYYY/MM/DD'>{from}</Moment> - {!to ? 'Now' : <Moment format='YYYY/MM/DD'>{to}</Moment>}\r\n\t</p>\r\n\t<p>\r\n\t\t<strong>Position</strong> {title ? title : 'No data'}\r\n\t</p>\r\n\t<p>\r\n\t\t<strong>Description</strong> {description ? description : \"No description\"}\r\n\t</p>\r\n</div>\r\n\r\nProfileExperience.propTypes = {\r\n\texperience: PropTypes.object.isRequired,\r\n}\r\n\r\nexport default ProfileExperience\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport Moment from 'react-moment'\r\n\r\nconst ProfileEducation = ({\r\n\teducation: {\r\n\t\tschool, \r\n\t\tdegree, \r\n\t\tfieldofstudy,\r\n\t\tto, \r\n\t\tfrom, \r\n\t\tcurrent, \r\n\t\tdescription\r\n\t}\r\n}) => <div>\r\n\t<h3 className=\"text-dark\">{school}</h3>\r\n\t<p>\r\n\t\t<Moment format='YYYY/MM/DD'>{from}</Moment> - {!to ? 'Now' : <Moment format='YYYY/MM/DD'>{to}</Moment>}\r\n\t</p>\r\n\t<p>\r\n\t\t<strong>Degree</strong> {degree ? degree : 'No data'}\r\n\t</p>\r\n\t<p>\r\n\t\t<strong>Field of Study</strong> {fieldofstudy ? fieldofstudy : 'No data'}\r\n\t</p>\r\n\t<p>\r\n\t\t<strong>Description</strong> {description ? description : 'No description'}\r\n\t</p>\r\n</div>\r\n\r\nProfileEducation.propTypes = {\r\n\teducation: PropTypes.object.isRequired,\r\n}\r\n\r\nexport default ProfileEducation\r\n","import React, {useEffect} from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport Spinner from '../layout/Spinner'\r\nimport {connect} from 'react-redux'\r\nimport {getGithubRepos} from '../../actions/profile'\r\n\r\nconst ProfileGithubRepos = ({\r\n\tuserName,\r\n\tgetGithubRepos,\r\n\trepos\r\n}) => {\r\n\r\n\tuseEffect(() => {\r\n\t\tgetGithubRepos(userName)\r\n\t}, [getGithubRepos, userName])\r\n\r\n\treturn (\r\n\t\t<div className=\"profile-github\">\r\n\t\t\t<h2 className=\"text-primary my-1\">Github Repos</h2>\r\n\t\t\t{repos === null ? <Spinner/> : (\r\n\t\t\t\trepos.map(repo => {\r\n\t\t\t\t\treturn <div key={repo.id} className='repo bg-white p-1 my-1'>\r\n\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t<h4>\r\n\t\t\t\t\t\t\t\t<a href={repo.html_url} target='_blank' rel='noopener noreferrer'>\r\n\t\t\t\t\t\t\t\t\t{repo.name}\r\n\t\t\t\t\t\t\t\t</a>\r\n\t\t\t\t\t\t\t</h4>\r\n\t\t\t\t\t\t\t<p>{repo.description}</p>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t<ul>\r\n\t\t\t\t\t\t\t\t<li className=\"badge badge-primary\">\r\n\t\t\t\t\t\t\t\t\tStars: {repo.stargezers_count}\r\n\t\t\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t\t\t<li className=\"badge badge-dark\">\r\n\t\t\t\t\t\t\t\t\tWatchers: {repo.watchers_count}\r\n\t\t\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t\t\t<li className=\"badge badge-light\">\r\n\t\t\t\t\t\t\t\t\tForks: {repo.forks_count}\r\n\t\t\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t\t</ul>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t})\r\n\t\t\t)}\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nProfileGithubRepos.propTypes = {\r\n\trepos: PropTypes.array.isRequired,\r\n\tgetGithubRepos: PropTypes.func.isRequired,\r\n\tuserName: PropTypes.string.isRequired,\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n\trepos: state.profile.repos\r\n})\r\n\r\nexport default connect(mapStateToProps, {getGithubRepos}) (ProfileGithubRepos)\r\n","import React, {useEffect, Fragment} from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport {connect} from 'react-redux'\r\nimport {Link} from 'react-router-dom'\r\nimport {getProfileById} from '../../actions/profile'\r\nimport Spinner from '../../components/layout/Spinner'\r\nimport ProfileTop from './ProfileTop'\r\nimport ProfileAbout from './ProfileAbout'\r\nimport ProfileExperience from './ProfileExperience'\r\nimport ProfileEducation from './ProfileEducation'\r\nimport ProfileGithubRepos from './ProfileGithubRepos'\r\n\r\nconst Profile = ({\r\n\tgetProfileById,\r\n\tprofile: {profile, loading},\r\n\tauth,\r\n\tmatch\r\n}) => {\r\n\r\n\tconst gottenProfile = useEffect(() => {\r\n\t\tgetProfileById(match.params.id)\r\n\t}, [getProfileById, match.params.id]);\r\n\r\n\tconsole.log('gottenProfile', gottenProfile)\r\n\r\n\treturn (\r\n\t\t<Fragment>\r\n\t\t\t{loading || profile === null ? <Spinner/> : (<Fragment>\r\n\t\t\t\t<Link to=\"/profiles\" className=\"btn btn-light\">\r\n\t\t\t\t\tBack to profiles\t\r\n\t\t\t\t</Link>\r\n\t\t\t\t{auth.loading === false &&\r\n\t\t\t\t auth.isAuthenticated &&\r\n\t\t\t\t auth.user._id === profile.user._id &&\r\n\t\t\t\t (<Link to=\"/edit-profile\" className=\"btn btn-dark\">\r\n\t\t\t\t\t Edit Profile\r\n\t\t\t\t\t</Link>)}\r\n\t\t\t\t<div className=\"profile-grid my-1\">\r\n\t\t\t\t\t<ProfileTop profile={profile}></ProfileTop>\t\r\n\t\t\t\t\t<ProfileAbout profile={profile}></ProfileAbout>\r\n\t\t\t\t\t<div className='profile-exp bg-white p-2'>\r\n\t\t\t\t\t\t<h2 className='text-primary'>Experience</h2>\r\n\t\t\t\t\t\t{profile.experience.length > 0 ? (\r\n\t\t\t\t\t\t\tprofile.experience.map(exp => {\r\n\t\t\t\t\t\t\t\treturn <ProfileExperience key={exp._id} experience={exp}/>\r\n\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t) : (<h4>No experience credentials</h4>)}\r\n\t\t\t\t\t</div>\t\r\n\t\t\t\t\t<div className='profile-edu bg-white p-2'>\r\n\t\t\t\t\t\t<h2 className='text-primary'>Education</h2>\r\n\t\t\t\t\t\t{profile.education.length > 0 ? (\r\n\t\t\t\t\t\t\tprofile.education.map(edu => {\r\n\t\t\t\t\t\t\t\treturn <ProfileEducation key={edu._id} education={edu}/>\r\n\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t) : (<h4>No education credentials</h4>)}\r\n\t\t\t\t\t</div>\t\r\n\t\t\t\t\t{profile.githubusername && <ProfileGithubRepos userName={profile.githubusername}/>}\r\n\t\t\t\t</div>\r\n\t\t\t</Fragment>)}\r\n\t\t</Fragment>\r\n\t)\r\n}\r\n\r\nProfile.propTypes = {\r\n\tgetProfileById: PropTypes.func.isRequired,\r\n\tprofile: PropTypes.object.isRequired,\r\n\tauth: PropTypes.object.isRequired\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n\tprofile: state.profile,\r\n\tauth: state.auth\r\n})\r\n\r\nexport default connect(mapStateToProps, {getProfileById}) (Profile)\r\n","import React, {Fragment} from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport {connect} from 'react-redux'\r\nimport {Link} from \"react-router-dom\"\r\nimport Moment from 'react-moment'\r\nimport {addLike, removeLike, deletePost} from '../../actions/post'\r\n\r\nconst PostItem = ({\r\n\tauth,\r\n\tpost: {\r\n\t\t_id,\r\n\t\tcomments,\r\n\t\ttext,\r\n\t\tname,\r\n\t\tavatar,\r\n\t\tuser,\r\n\t\tlikes,\r\n\t\tdate\r\n\t},\r\n\taddLike,\r\n\tremoveLike,\r\n\tdeletePost, \r\n\tshowAction\r\n}) => (\r\n\t\t<div className=\"post bg-white p-1 my-1\">\r\n\t\t\t<div>\r\n\t\t\t\t<Link to={`/profile/${user}`}>\r\n\t\t\t\t\t<img\r\n\t\t\t\t\t\tclassName=\"round-img\"\r\n\t\t\t\t\t\tsrc={avatar}\r\n\t\t\t\t\t\talt=\"\"\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t<h4>{name}</h4>\r\n\t\t\t\t</Link>\r\n\t\t\t</div>\r\n\t\t\t<div>\r\n\t\t\t\t<p className=\"my-1\">\r\n\t\t\t\t\t{text}\r\n\t\t\t\t</p>\r\n\t\t\t\t<p className=\"post-date\">\r\n\t\t\t\t\t\tPosted on <Moment format=\"YYYY/MM/DD\">{date}</Moment>\t\r\n\t\t\t\t</p>\r\n\r\n\t\t\t\t{showAction && (\r\n\t\t\t\t\t<Fragment>\r\n\t\t\t\t\t\t<button \r\n\t\t\t\t\t\t\ttype=\"button\"\r\n\t\t\t\t\t\t\tonClick={() => addLike(_id)}\r\n\t\t\t\t\t\t\tclassName=\"btn btn-light\">\r\n\t\t\t\t\t\t\t<i className=\"fas fa-thumbs-up\"></i>\r\n\t\t\t\t\t\t\t{console.log(`likes`, likes)}\r\n\t\t\t\t\t\t\t<span>{likes.length > 0 && (<span className=\"comment-count\">{likes.length}</span>)}</span>\r\n\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t<button \r\n\t\t\t\t\t\t\ttype=\"button\" \r\n\t\t\t\t\t\t\tonClick={() => removeLike(_id)}\r\n\t\t\t\t\t\t\tclassName=\"btn btn-light\">\r\n\t\t\t\t\t\t\t<i className=\"fas fa-thumbs-down\"></i>\t\t\t\r\n\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t<Link to={`/posts/${_id}`} className=\"btn btn-primary\">\r\n\t\t\t\t\t\t\tDiscussion {\" \"}\r\n\t\t\t\t\t\t\t{comments.length > 0 && (\r\n\t\t\t\t\t\t\t\t<span className='comment-count'>{comments.length}</span>\r\n\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t</Link> \r\n\t\t\t\t\t\t{!auth.loading && user === auth.user._id && (\r\n\t\t\t\t\t\t\t<button\r\n\t\t\t\t\t\t\t\ttype=\"button\"\r\n\t\t\t\t\t\t\t\tclassName=\"btn btn-danger\"\r\n\t\t\t\t\t\t\t\tonClick = {\r\n\t\t\t\t\t\t\t\t\t() => {deletePost(_id)}\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t<i className=\"fas fa-times\"></i>\r\n\t\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t)}\r\n\t\t\t\t\t</Fragment>\r\n\t\t\t\t)}\t\t\t\t\r\n\r\n\t\t\t</div>\r\n    </div>\r\n\t)\r\n\r\nPostItem.defaultProps = {\r\n\tshowAction: true\r\n};\r\n\t\r\nPostItem.propTypes = {\r\n\tauth: PropTypes.object.isRequired,\r\n\tpost: PropTypes.object.isRequired,\r\n\taddLike: PropTypes.func.isRequired,\r\n\tdeletePost: PropTypes.func.isRequired,\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n\tauth: state.auth\r\n})\r\n\r\nexport default connect(\r\n\tmapStateToProps, \r\n\t{addLike, removeLike, deletePost}\r\n) (PostItem)\r\n","import axios from 'axios'\r\nimport {\r\n\tGET_POSTS,\r\n\tGET_POST,\r\n\tPOST_ERROR, \r\n\tUPDATE_LIKES,\r\n\tDELETE_POST,\r\n\tSET_ALERT,\r\n\tCREATE_POST,\r\n\tCREATE_COMMENT,\r\n\tDELETE_COMMENT\r\n} \r\nfrom './types'\r\nimport {setAlert} from './alert'\r\n\r\n//Get posts\r\nexport const getPosts = () => async dispatch => {\r\n\ttry {\r\n\t\tconst res = await axios.get('/api/posts');\r\n\t\tdispatch({\r\n\t\t\ttype: GET_POSTS,\r\n\t\t\tpayload: res.data\r\n\t\t})\r\n\t\t\r\n\t} catch (err) {\r\n\t\tdispatch({\r\n\t\t\ttype: POST_ERROR,\r\n\t\t\tpayload: { msg: err.response.statusText, status: err.response.status }\r\n\t\t });\r\n\t}\r\n};\r\n\r\n//Get post by id\r\nexport const getPost = id => async dispatch => {\r\n\ttry {\r\n\t\tconst res = await axios.get(`/api/posts/${id}`);\r\n\t\tdispatch({\r\n\t\t\ttype: GET_POST,\r\n\t\t\tpayload: res.data\r\n\t\t})\r\n\t\t\r\n\t} catch (err) {\r\n\t\tdispatch({\r\n\t\t\ttype: POST_ERROR,\r\n\t\t\tpayload: { msg: err.response.statusText, status: err.response.status }\r\n\t\t });\r\n\t}\r\n};\r\n\r\n// Add like\r\nexport const addLike = id => async dispatch => {\r\n  try {\r\n    const res = await axios.put(`/api/posts/like/${id}`);\r\n\r\n    dispatch({\r\n      type: UPDATE_LIKES,\r\n      payload: { id, likes: res.data }\r\n    });\r\n  } catch (err) {\r\n\r\n\t\tdispatch({\r\n      type: POST_ERROR,\r\n      payload: { msg: err.response.statusText, status: err.response.status }\r\n    });\r\n  }\r\n};\r\n\r\n// Remove like\r\nexport const removeLike = id => async dispatch => {\r\n  try {\r\n    const res = await axios.put(`/api/posts/unlike/${id}`);\r\n\r\n    dispatch({\r\n      type: UPDATE_LIKES,\r\n      payload: { id, likes: res.data }\r\n\t\t});\r\n\t\t\r\n  } catch (err) {\r\n    dispatch({\r\n      type: POST_ERROR,\r\n      payload: { msg: err.response.statusText, status: err.response.status }\r\n    });\r\n  }\r\n};\r\n\r\n// Create post\r\nexport const createPost = text => async dispatch => {\r\n\tconst config = {\r\n\t\theaders: {\r\n\t\t\t\"Content-Type\": \"application/json\"\r\n\t\t}\r\n\t};\r\n\t\r\n\ttry {\r\n\t\tconst res = await axios.post('/api/posts', text, config);\r\n\r\n\t\tdispatch({\r\n\t\t\ttype: CREATE_POST,\r\n\t\t\tpayload: res.data\r\n\t\t})\r\n\r\n\t\tdispatch(setAlert(\"Post created successfully\", \"success\"))\r\n\r\n\t} catch (err) {\r\n\t\tdispatch({\r\n\t\t\ttype: POST_ERROR,\r\n\t\t\tpayload: { msg: err.response.statusText, status: err.response.status }\r\n\t\t})\r\n\t}\r\n}\r\n\r\n// Delete post\r\nexport const deletePost = id => async dispatch => {\r\n\ttry {\r\n\r\n\t\tawait axios.delete(`/api/posts/${id}`);\r\n\t\tdispatch({\r\n\t\t\ttype: DELETE_POST,\r\n\t\t\tpayload: {id}\r\n\t\t})\r\n\r\n\t\tdispatch(setAlert(\"Post deleted successfully\", \"success\"))\r\n\r\n\t} catch(err) {\r\n\t\t\tconsole.log(err)\r\n\t}\r\n};\r\n\r\n// Create comment\r\nexport const createComment = (postId, comment) => async dispatch => {\r\n\tconst config = {\r\n\t\theaders: {\r\n\t\t\t\"Content-Type\": \"application/json\"\r\n\t\t}\r\n\t};\r\n\t\r\n\ttry {\r\n\t\tconst res = await axios.post(`/api/posts/comments/${postId}`, comment, config);\r\n\r\n\t\tdispatch({\r\n\t\t\ttype: CREATE_COMMENT,\r\n\t\t\tpayload: res.data\r\n\t\t})\r\n\r\n\t\tdispatch(setAlert(\"Comment created successfully\", \"success\"))\r\n\r\n\t} catch (err) {\r\n\t\tconsole.log(`err`, err)\r\n\t\tdispatch({\r\n\t\t\ttype: POST_ERROR,\r\n\t\t\tpayload: { msg: err.response.statusText, status: err.response.status }\r\n\t\t})\r\n\t}\r\n}\r\n\r\n// Delete comment\r\nexport const deleteComment = (postId, commentId) => async dispatch => {\r\n\ttry {\r\n\r\n\t\tawait axios.delete(`/api/posts/comments/${postId}/${commentId}`);\r\n\t\tdispatch({\r\n\t\t\ttype: DELETE_COMMENT,\r\n\t\t\tpayload: commentId\r\n\t\t})\r\n\r\n\t\tdispatch(setAlert(\"Comment deleted successfully\", \"success\"))\r\n\r\n\t} catch(err) {\r\n\t\t\tconsole.log(err)\r\n\t}\r\n};","import React, {Fragment, useState} from 'react';\r\nimport PropTypes from 'prop-types'\r\nimport {connect} from 'react-redux';\r\nimport {createPost} from '../../actions/post'\r\n\r\nconst AddPost = ({\r\n   createPost\r\n}) => {\r\n\r\n   const [text, setText] = useState('');\r\n\r\n   const onSubmit = e => {\r\n      e.preventDefault();\r\n      createPost({text})\r\n      setText('')\r\n   };\r\n\r\n   return <Fragment>\r\n      <div className=\"bg-primary p\" >\r\n        <h3>Create a post...</h3>\r\n      </div>\r\n      <form className=\"form my-1\" onSubmit = {e => onSubmit(e)}>\r\n         <textarea\r\n            name=\"text\"\r\n            cols=\"30\"\r\n            rows=\"5\"\r\n            placeholder=\"Create a post\"\r\n            value={text}\r\n            required\r\n            onChange = {e => {\r\n               setText(e.target.value);\r\n            }}\r\n      ></textarea>\r\n         <input \r\n            type=\"submit\" \r\n            className=\"btn btn-dark my-1\" \r\n            value=\"Submit\" \r\n         />\r\n      </form>\r\n   </Fragment> \r\n};\r\n\r\nAddPost.propTypes = {\r\n   createPost: PropTypes.func.isRequired\r\n}\r\n\r\nexport default connect(null, {\r\n   createPost\r\n}) (AddPost)","import React, {useEffect, Fragment} from 'react'\r\nimport Spinner from '../layout/Spinner'\r\nimport PostItem from './PostItem'\r\nimport PostForm from './PostForm'\r\nimport PropTypes from 'prop-types'\r\nimport {getPosts} from '../../actions/post'\r\nimport {connect} from 'react-redux'\r\n\r\nconst Posts = ({\r\n\tgetPosts,\r\n\tpost: {loading, posts}\r\n}) => {\r\n\r\n\tuseEffect(() => {\r\n\t\tgetPosts()\r\n\t}, [getPosts])\r\n\r\n\treturn loading ? (<Spinner/>) : (<Fragment>\r\n\t\t<h1 className=\"large text-primary\">Posts</h1>\r\n\t\t<p className=\"lead\">\r\n\t\t\t<i className=\"fas fas-user\"></i> Welcome to the community\r\n\t\t</p>\r\n\t\t<PostForm/>\r\n\t\t<div className='posts'>\r\n        {posts.map((post, index) => (\r\n          <PostItem key={index} post={post} />\r\n        ))}\r\n     </div>\r\n\t</Fragment>)\r\n};\r\n\r\nPosts.propTypes = {\r\n\tgetPosts: PropTypes.func.isRequired,\r\n\tpost: PropTypes.object.isRequired,\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n\tpost: state.post\r\n});\r\n\r\nexport default connect(mapStateToProps, {getPosts}) (Posts)\r\n","import React, {useState, Fragment} from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport {connect} from 'react-redux'\r\nimport {createComment} from '../../actions/post'\r\n\r\nconst CommentForm = ({\r\n\tcreateComment,\r\n\tpostId\r\n}) => {\r\n\r\n\tconst [text, setComment] = useState('');\r\n\tconst onSubmit = e => {\r\n\t\te.preventDefault();\r\n\t\tcreateComment(postId, {text});\r\n\t\tsetComment('')\r\n\t}\r\n\r\n\treturn <Fragment>\r\n\t\t  <div className=\"bg-primary p\" >\r\n        <h3>Leave your comment...</h3>\r\n      </div>\r\n      <form className=\"form my-1\" onSubmit = {e => onSubmit(e)}>\r\n         <textarea\r\n            name=\"comment\"\r\n            cols=\"30\"\r\n            rows=\"5\"\r\n            placeholder=\"Print your comment...\"\r\n            value={text}\r\n            required\r\n            onChange = {e => {\r\n\t\t\t\t\t\t\tsetComment(e.target.value);\r\n            }}\r\n      ></textarea>\r\n         <input \r\n            type=\"submit\" \r\n            className=\"btn btn-dark my-1\" \r\n            value=\"Submit\" \r\n         />\r\n      </form>\r\n\t</Fragment>\r\n};\r\n\r\nCommentForm.protoTypes = {\r\n\tcreateComment: PropTypes.func.isRequired\r\n};\r\n\r\nexport default connect(null, {createComment}) (CommentForm)","import React from 'react'\r\nimport Moment from 'react-moment'\r\nimport {connect} from 'react-redux'\r\nimport {Link} from 'react-router-dom'\r\nimport PropTypes from 'prop-types'\r\nimport {deleteComment} from '../../actions/post'\r\n\r\nconst CommentItem = ({\r\n\tpostId,\r\n  comment: {\r\n\t\t text, name, avatar, user, date, _id\r\n\t},\r\n\tauth,\r\n\tdeleteComment\r\n}) => {\r\n\r\n   return  <div className=\"post bg-white p-1 my-1\">\r\n   <div>\r\n     <Link to={`/profile/${user}`}>\r\n       <img\r\n         className=\"round-img\"\r\n         src={avatar}\r\n         alt=\"\"\r\n       />\r\n       <h4>{name}</h4>\r\n     </Link>\r\n   </div>\r\n   <div>\r\n     <p className=\"my-1\">\r\n         {text}\r\n     </p>\r\n      <p className=\"post-date\">\r\n        Posted <Moment format='YYYY/MM/DD'>{date}</Moment>\r\n     </p>\r\n\t\t {auth.isAuthenticated && auth.user._id === user && \r\n\t\t\t <button \r\n\t\t\t \tclassName='btn btn-danger'\r\n\t\t\t\tonClick={() => {deleteComment(postId, _id)}}\r\n\t\t\t\t>\r\n\t\t\t\t <i className='fas fa-times'></i>\r\n\t\t\t</button>}\r\n   </div>\r\n </div>\r\n};\r\n\r\nCommentItem.propTypes = {\r\n\t comment: PropTypes.object.isRequired,\r\n\t auth: PropTypes.object.isRequired,\r\n\t postId: PropTypes.string.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n\tauth: state.auth\r\n});\r\n\r\nexport default connect(mapStateToProps, {deleteComment}) (CommentItem)","import React, {useEffect, Fragment} from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport {Link} from 'react-router-dom'\r\nimport {connect} from 'react-redux'\r\nimport {getPost} from '../../actions/post'\r\nimport Spinner from '../layout/Spinner'\r\nimport PostItem from '../posts/PostItem'\r\nimport CommentForm from './CommentForm'\r\nimport CommentItem from './CommentItem'\r\n\r\nconst Post = ({\r\n\tgetPost,\r\n\tmatch,\r\n\tpost: {\r\n\t\tloading, post\r\n\t}\r\n}) => {\r\n\r\n\tuseEffect(() => {\r\n\t\tgetPost(match.params.id)\r\n\t}, [getPost, match]) \t\r\n\r\n\treturn loading || post === null ? (<Spinner/>) : (\r\n\t\t\t<Fragment>\r\n\t\t\t\t<Link to='/posts' className='btn'>Back to posts</Link>\r\n\t\t\t\t<PostItem post={post} showAction={false}/>\r\n\t\t\t\t<CommentForm postId={match.params.id}/>\r\n\t\t\t\t<div className='comments'>\r\n\t\t\t\t\t{post.comments.map((comment, index) => \r\n\t\t\t\t\t\t<CommentItem postId={post._id} comment={comment} key={index}/>\r\n\t\t\t\t\t)}\r\n\t\t\t\t</div>\r\n\t\t\t</Fragment>\r\n\t\t)\r\n}\r\n\r\nPost.propTypes = {\r\n\tgetPost: PropTypes.func.isRequired,\r\n\tpost: PropTypes.object.isRequired\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n\tpost: state.post\r\n})\r\n\r\n\r\nexport default connect(mapStateToProps, {getPost}) (Post)","import {SET_ALERT, REMOVE_ALERT} from '../actions/types';\r\nconst initialState = [];\r\n\r\nexport default function(state = initialState, action) {\r\n   const {type, payload} = action;\r\n\r\n   switch(type) {\r\n      case SET_ALERT:\r\n         return [...state, payload];\r\n      case REMOVE_ALERT:\r\n         return state.filter(alert => alert.id !== payload.id);\r\n      default:\r\n      return state\r\n   }\r\n}","import {\r\n\tREGISTER_SUCCESS, \r\n\tREGISTER_FAIL,\r\n\tUSER_LOADED,\r\n\tAUTH_ERROR,\r\n\tLOGIN_SUCCESS,\r\n\tLOGIN_FAIL,\r\n\tLOGOUT,\r\n\tCLEAR_PROFILE,\r\n\tACCOUNT_DELETED\r\n}\r\nfrom '../actions/types';\r\n\r\nconst initialState = {\r\n\ttoken: localStorage.getItem('token'),\r\n\tisAuthenticated: null,\r\n\tloading: true,\r\n\tuser: null\r\n}\r\n\r\nexport default function(state = initialState, action) {\r\n\tconst {type, payload} = action;\r\n\tswitch(type) {\r\n\t\tcase USER_LOADED:\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tisAuthenticated: true,\r\n\t\t\t\tuser: payload,\r\n\t\t\t\tloading: false\r\n\t\t\t}\r\n\t\tcase REGISTER_SUCCESS:\r\n\t\tcase LOGIN_SUCCESS:\r\n\t\t\tlocalStorage.setItem('token', payload.token);\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\t...payload,\r\n\t\t\t\tisAuthenticated: true,\r\n\t\t\t\tloading: false\r\n\t\t\t}\r\n\t\tcase REGISTER_FAIL:\r\n\t\tcase AUTH_ERROR:\r\n\t\tcase LOGIN_FAIL:\r\n\t\tcase LOGOUT: \r\n\t\tcase ACCOUNT_DELETED: \r\n\t\t\tlocalStorage.removeItem('token');\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\ttoken: null,\r\n\t\t\t\tisAuthenticated: false,\r\n\t\t\t\tloading: false\r\n\t\t\t}\r\n\t\tcase CLEAR_PROFILE:\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tprofile: null,\r\n\t\t\t\trepos: [],\r\n\t\t\t\tloading: false\r\n\t\t\t}\r\n\t\tdefault:\r\n\t\t\treturn state\r\n\t}\r\n}","import {\r\n\tGET_PROFILE,\r\n\tGET_PROFILES,\r\n\tGET_GITHUB_REPOS,\r\n\tUPDATE_PROFILE,\r\n\tPROFILE_ERROR\r\n} from '../actions/types';\r\n\r\nconst initialState = {\r\n\tprofile: null,\r\n\tprofiles: [],\r\n\trepos: [],\r\n\tloading: true,\r\n\terror: {}\r\n};\r\n\r\nexport default function (state = initialState, action) {\r\n\tconst {type, payload} = action;\r\n\r\n\tswitch(type) {\r\n\t\tcase GET_PROFILE:\r\n\t\tcase UPDATE_PROFILE:\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tprofile: payload,\r\n\t\t\t\tloading: false\r\n\t\t\t}\r\n\t\tcase GET_PROFILES:\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tprofiles: payload,\r\n\t\t\t\tloading: false\r\n\t\t\t}\r\n\t\tcase GET_GITHUB_REPOS:\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\trepos: payload,\r\n\t\t\t\tloading: false\r\n\t\t\t}\r\n\t\tcase PROFILE_ERROR:\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tloading: false,\r\n\t\t\t\terror: payload,\r\n\t\t\t\tprofile: null\r\n\t\t\t}\r\n\t\tdefault:\r\n\t\t\treturn state\r\n\t}\r\n}","import {\r\n\tGET_POSTS, \r\n\tGET_POST, \r\n\tPOST_ERROR, \r\n\tUPDATE_LIKES,\r\n\tDELETE_POST,\r\n\tCREATE_POST,\r\n\tGET_PROFILE,\r\n\tCREATE_COMMENT,\r\n\tDELETE_COMMENT\r\n} \r\nfrom '../actions/types'\r\n\r\nconst initialState = {\r\n\tposts: [],\r\n\tloading: true,\r\n\tpost: null,\r\n\terror: {}\r\n};\r\n\r\nexport default function(state = initialState, action) {\r\n\tconst {type, payload} = action;\r\n\r\n\tswitch(type) {\r\n\t\tcase GET_POSTS:\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tposts: payload,\r\n\t\t\t\tloading: false\r\n\t\t\t}\r\n\t\tcase GET_POST:\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tpost: payload,\r\n\t\t\t\tloading: false\r\n\t\t\t}\r\n\t\tcase POST_ERROR:\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\terror: payload,\r\n\t\t\t\tloading: false\r\n\t\t\t}\r\n\t\tcase UPDATE_LIKES:\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tposts: state.posts.map(post =>\r\n\t\t\t\t\tpost._id === payload.id ? { ...post, likes: payload.likes } : post\r\n\t\t\t\t),\r\n\t\t\t\tloading: false\r\n\t\t\t};\r\n\t\tcase DELETE_POST:\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tloading: false,\r\n\t\t\t\tposts: state.posts.filter(post => post._id !== payload.id)\r\n\t\t\t};\r\n\t\tcase CREATE_POST:\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tloading: false,\r\n\t\t\t\tposts: [payload, ...state.posts]\r\n\t\t\t}\r\n\t\tcase CREATE_COMMENT:\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tloading: false,\r\n\t\t\t\tpost: payload  \r\n\t\t\t}\r\n\t\tcase DELETE_COMMENT:\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tloading: false,\r\n\t\t\t\tpost: {\r\n\t\t\t\t\t...state.post, comments: state.post.comments.filter(comment => comment._id !== payload)\r\n\t\t\t\t}\r\n\t\t\t}\t\r\n\t\tdefault: \r\n\t\t\treturn state\r\n\t}\r\n}","import { combineReducers } from 'redux';\r\nimport alert from './alert';\r\nimport auth from './auth';\r\nimport profile from './profile';\r\nimport post from './post';\r\n\r\nexport default combineReducers({\r\n\talert,\r\n\tauth,\r\n\tprofile,\r\n\tpost\r\n});","import { createStore, applyMiddleware } from 'redux';\r\nimport { composeWithDevTools } from 'redux-devtools-extension';\r\nimport thunk from 'redux-thunk';\r\nimport rootReducer from './reducers';\r\n\r\nconst initialState = {};\r\n\r\nconst middleware = [thunk];\r\n\r\nconst store = createStore(\r\n  rootReducer,\r\n  initialState,\r\n  composeWithDevTools(applyMiddleware(...middleware))\r\n);\r\n\r\nexport default store;","import React, {Fragment, useEffect} from 'react';\r\nimport {BrowserRouter as Router, Route, Switch} from 'react-router-dom';\r\nimport Navbar from './components/layout/Navbar';\r\nimport Landing from './components/layout/Landing';\r\nimport Register from './components/auth/Register';\r\nimport Login from './components/auth/Login';\r\nimport Alert from './components/layout/Alert';\r\nimport Dashboard from './components/dashboard/Dashboard';\r\nimport CreateProfile from './components/profile-forms/CreateProfile';\r\nimport EditProfile from './components/profile-forms/EditProfile';\r\nimport AddExperience from './components/profile-forms/AddExperience';\r\nimport AddEducation from './components/profile-forms/AddEducation';\r\nimport PrivateRoute from './components/routing/PrivateRoute';\r\nimport Profiles from './components/profiles/Profiles';\r\nimport Profile from './components/profile/Profile';\r\nimport Posts from './components/posts/Posts';\r\nimport Post from './components/post/Post';\r\nimport './App.css';\r\n//Redux\r\nimport {Provider} from 'react-redux';\r\nimport store from './store';\r\nimport setAuthToken from './utils/setAuthToken';\r\nimport {loadUser} from './actions/auth'\r\n\r\nif (localStorage.token) {\r\n\tsetAuthToken(localStorage.token)\r\n}\r\n\r\nconst App = () => {\r\n\tuseEffect(() => {\r\n\t\tstore.dispatch(loadUser())\r\n\t}, [])\r\n\r\n\treturn (\r\n\t<Provider store={store}>\t\t\t\r\n\t\t<Router>\r\n\t\t\t<Fragment>\r\n\t\t\t\t<Navbar/>\r\n\t\t\t\t<Route exact path=\"/\" component={Landing}/>\r\n\t\t\t\t<section className=\"container\">\r\n\t\t\t\t\t<Alert/>\r\n\t\t\t\t\t<Switch>\r\n\t\t\t\t\t\t<Route exact path=\"/register\" component={Register}/>\r\n\t\t\t\t\t\t<Route exact path=\"/login\" component={Login}/>\r\n\t\t\t\t\t\t<Route exact path=\"/profiles\" component={Profiles}/>\r\n\t\t\t\t\t\t<Route exact path=\"/profile/:id\" component={Profile}/>\r\n\t\t\t\t\t\t<PrivateRoute exact path=\"/dashboard\" component={Dashboard}/>\r\n\t\t\t\t\t\t<PrivateRoute exact path=\"/create-profile\" component={CreateProfile}/>\r\n\t\t\t\t\t\t<PrivateRoute exact path=\"/edit-profile\" component={EditProfile}/>\r\n\t\t\t\t\t\t<PrivateRoute exact path=\"/add-experience\" component={AddExperience}/>\r\n\t\t\t\t\t\t<PrivateRoute exact path=\"/add-education\" component={AddEducation}/>\r\n\t\t\t\t\t\t<PrivateRoute exact path=\"/posts\" component={Posts}/>\r\n\t\t\t\t\t\t<PrivateRoute exact path=\"/posts/:id\" component={Post}/>\r\n\t\t\t\t\t</Switch>\r\n\t\t\t\t</section>\r\n\t\t\t</Fragment>\r\n\t\t</Router>\r\n\t</Provider>\t\r\n\r\n)}\r\n\r\nexport default App;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));"],"sourceRoot":""}